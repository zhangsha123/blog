/*
SQLyog Ultimate v12.09 (64 bit)
MySQL - 5.7.16-log : Database - blog_sql
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`blog_sql` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `blog_sql`;

/*Table structure for table `apilist` */

DROP TABLE IF EXISTS `apilist`;

CREATE TABLE `apilist` (
  `id` varchar(200) NOT NULL,
  `title` varchar(1000) DEFAULT NULL,
  `url` varchar(1000) DEFAULT NULL,
  `type` varchar(200) DEFAULT NULL,
  `sendparams` longtext,
  `getparams` longtext,
  `backorfont` varchar(200) DEFAULT NULL,
  `time` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `apilist` */

insert  into `apilist`(`id`,`title`,`url`,`type`,`sendparams`,`getparams`,`backorfont`,`time`) values ('M2NlOGMxNmEtYmMyMC00YTYxLTljYWQtNDUxZDI5NGI0YjFm','后台删除一级类名','/api/back_class/delete_one','post','{\n id:string  //一级类名的id\n enname_one：string    //一级类名的英文标识\n}','{\n    \"code\": \"1071\",//1071成功 ，1070失败\n    \"msg\": \"删除数据成功\"\n}','back','2017-09-03 17:57:35'),('MjE5ZGI5NzQtYzFmOS00ZmQyLWE5ZDQtM2JiY2FlZjYwYTdm','接口文档添加','/api/apilist/','post','title:sting  //接口标题\nurl:string  //接口地址\ntype：string //接口类型\nsendparams：string //发送的参数\ngetparams：string //响应参数\nbackorfont：string //前台或后台接口','{\n   code: \"2001\",  //2001失败、2000成功\n   msg: \"数据插入失败\"  //返回消息\n }','back','2017-09-03 11:37:24'),('MTU3MDA3MTctZjVjNi00MDAyLTlhMDktN2RhMzdjODQ0MTMw','二级类名的添加','/api/back_class/add_two_class','post','{\n  oneId:\"Y2Y2NWRhZDQtODJhMy00ODMwLTllODgtNjhkNGNmMTU3Y2U0\",  //所属一级分类id\n  enname_two:sring   //二级英文标识\n  cnname_two:sring   //二级名称\n}','{\n    \"code\": \"1032\",  //1030：英文标识冲突； 1031数据库错误 1032数据插入成功\n    \"msg\": \"数据插入成功\"\n}','back','2017-09-03 14:54:32'),('MWU5MzY3MGUtNzRkMy00ZTdmLTk4YTctNTk5YTA3M2M4YWJl','前台根据文章id获取相应文章','/api/front_article/getArticle','get','{\n  id:string    //文章的id\n}','{\n    \"code\": \"6030\",   //6030成功   //6031失败   //6032失败   \n    \"data\": {\n        \"LIST\": 1,\n        \"id\": \"OGM1Y2I1N2ItNTRiNi00NDRiLThjNzMtMzg1MGRiNzUzYmM3\",\n        \"oneId\": \"OTAyZThmYTctY2M1MC00MTJlLWEzY2MtYzY4NjJiZmIyNzQ0\",\n        \"twoId\": \"Mjk3OGQxNDgtZjNkNS00NWJmLTk4MjctNzgxOGUyMzBkY2E1\",\n        \"article_name\": \"土豆丝\",\n        \"editer\": \"李四\",\n        \"content\": \"<p>法大师傅撒法</p>\",\n        \"TIME\": \"2017-09-07T00:54:50.000Z\",\n        \"visitors\": 0,\n        \"daodu\": \"似的发射点\",\n        \"imgsrc\": \"undefined\",\n        \"recommend\": 1,\n        \"art_show\": 1,\n        \"time\": \"2017-09-07 08:56:25\"\n    },\n    \"msg\": \"查询成功\"\n}','font','2017-09-07 08:59:44'),('NDI0MmVjNGEtZjI4ZC00N2U3LWIyMzItMjBmZWQ5ODdmYjM3','接口列表查询','/api/apilist/list','get','{\n type:\"back/font\"  //back为后台接口 font为前台接口\n}','{\n  code: \"2010/2011\",  // 2010查询成功，2011查询失败\n  msg: \"数据查询成功\",\n  data: rows/null    //rows列表数组，失败时为null\n }','back','2017-09-03 13:37:46'),('NDk3YmFiYzAtZDAyOS00ZmI0LThlMDItZGFhMTgyNDBlOTkw','后台删除二级分类','/api/back_class/delete_two','post','{\n  oneId：string  //一级分类id\n  twoId:string   //二级分类id\n  enname_one:string //一级分类英文标识\n}','{\n    \"code\": \"1071\",   //1071成功  //1073，1070失败\n    \"msg\": \"删除数据成功\"\n}','back','2017-09-04 08:40:19'),('NWZiYjQwMzctNTc2Mi00MzMwLTg3NjUtMTE3ZmI1NjM2OWMy','后台读取分类列表','/api/back_class/class_list','get','无','{\n    \"code\": \"1043\",//1041查询一级分类失败，1042二级查询失败， 1043成功\n    \"data\": [\n        {   //一级分类以对象的方式显示\n            \"onedata\": {\n                \"id\": \"MTI4NjJhNDEtZGJlMy00ZjliLWE3MmQtYmViNDQ2NWViZWI0\",\n                \"enname\": \"eqe\",\n                \"cnname\": \"一\",\n                \"time\": \"2017-09-03T07:46:48.000Z\"\n            },\n             //二级分类以数组的方式显示\n            \"twodata\": [\n                {\n                    \"id\": \"ODAxYjY4OGEtNDYwMS00ZWJiLWI4Y2UtODFkNmFhYmJjZThj\",\n                    \"parent_id\": \"MTI4NjJhNDEtZGJlMy00ZjliLWE3MmQtYmViNDQ2NWViZWI0\",\n                    \"enname\": \"qweqe\",\n                    \"cnname\": \"二\",\n                    \"article_num\": 0,\n                    \"time\": \"2017-09-03T07:46:48.000Z\"\n                }\n            ]\n        }\n    ],\n    \"msg\": \"查询成功\"\n}','back','2017-09-03 16:08:57'),('NWZmM2NkODQtNWUwYi00YjEyLTk2MTItMTM2Y2UzZDU0YjVi','后台用户登录接口','/api/back_class','post','{\n loginname:string,    //登录名\n loginpw:string,    //登录密码\n}','{\n   code: \"1001/1002/1003\",     //1001:登录成功,1002:登录失败，1003：用户名不存在\n   userid: string/null,       //string为登录成功后的用户id，null为失败\n   msg: \"登录成功\"\n }','back','2017-09-03 13:52:37'),('NzQ5N2IyNTYtZGFlMC00Y2I3LWIyZjgtMDI0NWYxMzcxMzNm','接口文档修改','/api/apilist/amend','post','{\n id:string，     //接口id\n title:string，  //接口标题\n url:string，    //接口地址\n type:string，   //接口请求类型\n sendparams:string，//接口发送参数\n getparams:string， //接口返回参数\n backorfont:string，//归属前台还是后台\n}','{\n code: \"2022/2021\",    //2022插入数据成功，2021失败\n msg: \"数据插入成功\"  \n}','back','2017-09-03 13:45:10'),('ODdjMTVkMTMtZTI0ZS00ZmNhLTkxMTYtOWRhZGNmNDQ5NGQ0','前台获取所有可显示的文章接口','/api/front_article/getArticleAll','get','无','{\n    \"code\": \"6012\",  //6012成功 6011失败\n    \"data\": [\n        {\n            \"LIST\": 1,\n            \"id\": \"OWZjNjY4ZDctNTQxMC00NTU3LTk0NWEtODU5NjcwMmZhZjE1\",\n            \"oneId\": \"YmM0ZjgwMjctMWI3NS00ZjNkLTkyODUtYjU2MWJhOGYyMzA3\",\n            \"twoId\": \"YmM0ZjgwMjctMWI3NS00ZjNkLTkyODUtYjU2MWJhOGYyMzA3\",\n            \"article_name\": \"天气很好\",\n            \"editer\": \"张三\",\n            \"content\": \"这里的天气很美啊\",\n            \"TIME\": \"2017-09-04T01:49:21.000Z\",\n            \"visitors\": 0,\n            \"daodu\": \"天气\",\n            \"imgsrc\": \"\",\n            \"recommend\": 1,\n            \"art_show\": 1,\n            \"time\": \"2017-09-04 17:28:42\"，\n             \"enname_one\": \"food\",\n            \"cnname_one\": \"美食\",\n            \"enname_two\": \"chuan\",\n            \"cnname_two\": \"川菜\"\n        }\n    ],\n    \"msg\": \"查询成功\"\n}','font','2017-09-09 14:31:56'),('OGRiM2UyMDktOTQ3Yy00OTVhLWI3NjItMzJkNGIxYzBkNjYz','后台所有文章列表数据','/api/back_article/getArticle','get','无','{\n    \"code\": \"3022\",//3021失败，3022成功\n    \"data\": [\n        {\n            \"LIST\": 1,     //当前文章编号\n            \"id\": \"OWZjNjY4ZDctNTQxMC00NTU3LTk0NWEtODU5NjcwMmZhZjE1\", //文章id\n            \"oneId\": \"YmM0ZjgwMjctMWI3NS00ZjNkLTkyODUtYjU2MWJhOGYyMzA3\",//一级类名id\n            \"twoId\": \"YmM0ZjgwMjctMWI3NS00ZjNkLTkyODUtYjU2MWJhOGYyMzA3\",//二级类名id\n            \"article_name\": \"天气很好\", //文章名称\n            \"editer\": \"张三\",           //作者\n            \"content\": \"这里的天气很美啊\", //文章内容\n            \"TIME\": \"2017-09-04T01:49:21.000Z\", //文章时间\n            \"visitors\": 0,                 //访问人数\n            \"daodu\": \"天气\",               //导读\n            \"imgsrc\": \"\",                  //导图地址\n            \"recommend\": 1,                //是否推荐显示\n            \"art_show\": 1,                 //文章是否显示\n            \"time\": \"2017-09-04 11:15:08\"  //创建时间\n        }\n    ],\n    \"msg\": \"查询成功\"\n}','back','2017-09-04 12:05:14'),('OGY4NjJkYzgtM2FjMy00Zjc3LWIzMzQtMTc1YmJjYWRmZjY3','一二级类名的查询接口','/api/back_article/getClass','get','无','{\n    \"code\": \"3001\", //3001成功；3000失败\n    \"data\": [\n        [     //第一个数组中为类名一的数据\n            {\n                \"id\": \"YmM0ZjgwMjctMWI3NS00ZjNkLTkyODUtYjU2MWJhOGYyMzA3\",\n                \"enname\": \"eqe\",\n                \"cnname\": \"一\",\n                \"time\": \"2017-09-04 09:49:21\"\n            }\n        ],\n        [    //第二个数组中为二级类名的数据\n            {\n                \"id\": \"OTE5ZDBiMDEtMGU4NC00N2UxLThlZmEtOTBhYzk3YTNmOGFi\",\n                \"parent_id\": \"YmM0ZjgwMjctMWI3NS00ZjNkLTkyODUtYjU2MWJhOGYyMzA3\",\n                \"enname\": \"qweqe\",\n                \"cnname\": \"二\",\n                \"article_num\": 0,\n                \"time\": \"2017-09-04 09:49:21\"\n            }\n        ]\n    ],\n    \"msg\": \"查询成功\"\n}','back','2017-09-04 10:26:14'),('OTBjNTg3MWMtMjc4NC00YjIzLWEzMTgtY2Y1NTk4NjMzYmE0','根据一级分类查询二级分类列表','/api/front_article/getClassTwo','post','{\n  oneId：string  //所属一级分类的id\n}','{\n    \"code\": \"6020\",\n    \"msg\": \"数据查询成功\",\n    \"data\": [\n        {\n            \"id\": \"ZGJhZDdjMTQtMjJlZS00YjNjLWExYzgtYWY4ZWE1OThkNDc1\",\n            \"parent_id\": \"ZDVjYjEyOTgtZjU3Ni00N2I3LTk1NDQtMzJiNTI2YWI4YjIy\",\n            \"enname\": \"qweqer\",\n            \"cnname\": \"二\",\n            \"article_num\": 0,\n            \"time\": \"2017-09-04 11:11:04\"\n        }\n    ]\n}','font','2017-09-04 18:43:45'),('OTQ4ZTRmODctYTk4MS00NDE5LWJhYTYtZWI1ZTJkMWIxNjli','个人简历留言提交接口','/api/myresume/insertmsg','post','{\nip：\"string\"        //客户端ip\ncountry：\"string\"   //国家\nprovince：\"string\"  //省份\ncity：\"string\"      //城市\nname：\"string\"      //姓名\nemai：\"string\"      //邮箱\ncontent：\"string\"   //内容\ntel：\"string\"       //手机号\n}','{\n     code: \"7011\",\n     data: null,\n     msg: \"插入成功\"\n  }','font','2017-09-17 16:46:58'),('YjMzN2Q4NzEtOTEwYS00NWJhLWExOGYtZDVkMmQyMjg4YWU0','文章添加接口','/api/back_article/addArticle','post','{\n  oneId：string    // 文章所归属的一级分类id\n  twoId：string    // 文章所归属的二级分类id\n  article_name：string    //文章标题\n  editer：string    // 作者\n  content：string    // 文章的内容\n  time：string    //  文章的创建时间\n  daodu：string    // 文章的导读\n  imgsrc：string    //为可选项，标题导图\n  recommend：1/0    //boolen值，1代表true，0代表false 是否在首页推荐显示\n  art_show：1/0     // boolen值，1代表true，0代表false 是否显示\n  enname_one：string    //一级分类的英文标识，根据此字段插入不同的表\n}','{\n    \"code\": \"3011\",  //3010为添加失败，3011为添加成功\n    \"msg\": \"添加成功\"\n}','back','2017-09-04 10:57:32'),('YjNkNTNhMzctZTYzZS00Y2YxLTlkNGMtZjNiMWY3NjliMzBi','接口文档删除接口','/api/apilist/delete','post','{\n id:string    //删除接口的id\n}','{\n   code: \"2032/2031\",  //2031删除失败，2032删除成功\n   msg: \"删除数据成功\"\n  }','back','2017-09-03 13:47:52'),('YmQ4YjQ2NDQtNDA2ZC00NWI0LWE4YzktOTNlNGZmOWUyZmFj','后台修改一级类名','/api/back_class/amend_class_one','post','{\n oldenname_one:string  //原一级类名的英文标识\n enname_one：string    //新改变一级类名的英文标识\n cnname_one：sting     //新改变一级类名的中文标识\n}','{\n  code: \"1052\",//1052成功，1501修改表失败，1503更新类名失败，1050英文标识冲突\n   msg: \"修改表成功\"\n}','back','2017-09-03 17:15:11'),('YWIxZjhhMzAtNjhmMy00OTRiLThkMjctYjAxNjkyYWMwZmUy','后台修改文章接口','/api/back_article/amendArticle','post','{\n  id:string           //  当前文章的唯一标识\n  article_name：string    //文章标题\n  visitors：string    //当前文章的访客量\n  editer：string    // 作者\n  content：string    // 文章的内容\n  time：string    //  文章的创建时间\n  daodu：string    // 文章的导读\n  imgsrc：string    //为可选项，标题导图\n  recommend：1/0    //boolen值，1代表true，0代表false 是否在首页推荐显示\n  art_show：1/0     // boolen值，1代表true，0代表false 是否显示\n  enname_one：string    //一级分类的英文标识，根据此字段插入不同的表\n}','{\n  code: \"3031\",  //3031成功，3030失败\n  msg: \"修改成功\"\n}','back','2017-09-04 12:10:37'),('YWQxNmY3MzItYzQ3ZC00M2MwLTg0N2YtNDgzY2FjM2NiMGVl','后台一级分类添加','/api/back_class/add_class_one','post','{\n enname_one：string   //一级英文标识\n cnname_one：string   //一级中文\n enname_two：string   //二级英文标识\n cnname_two：string   //二级中文\n}','{\n   code: \"1010\",     //1010：分类一英文标识冲突/1012：分类二英文标识冲突\"/1011：分类一插入数据库失败/1013：分类二插入数据库失败/1014：数据插入成功\n\n   msg: \"分类二英文标识冲突\"\n}','back','2017-09-03 14:24:09'),('YzQ3ZmZmODQtY2ZkYy00MzBlLWEyNjgtMWU1MjE1MGEwNjJh','获取头部导航数据','/api/front_article/getNav','get','无','{\n    \"code\": \"6010\",   //6010成功， 6011失败\n    \"msg\": \"数据查询成功\",\n    \"data\": [\n       \n            \"onedata\": {\n                \"id\": \"MTgwNjFlMzQtNThhYi00MGVlLWJhYjctZjQzNDQzZWU0YTYw\",\n                \"enname\": \"tec\",\n                \"cnname\": \"技术\",\n                \"time\": \"2017-09-07T00:52:59.000Z\"\n            },\n            \"twodata\": [\n                {\n                    \"id\": \"YTZkMmYwZjgtZTI0YS00YTA4LWIzOTktNWQ0ZmJiMmJmMDMz\",\n                    \"parent_id\": \"MTgwNjFlMzQtNThhYi00MGVlLWJhYjctZjQzNDQzZWU0YTYw\",\n                    \"enname\": \"vue\",\n                    \"cnname\": \"vue\",\n                    \"article_num\": 0,\n                    \"time\": \"2017-09-07T00:52:59.000Z\"\n                }\n            ]\n    ]\n}','font','2017-09-08 21:18:03'),('ZDI3NjUwYWEtNzc5Ni00ZTYxLTg1NDYtMDgxM2I0NDg4YmRh','一级类名接口查询','/api/back_class/select_one_class','get','无','{\n    \"code\": \"1021\",\n    \"data\": [\n        {\n            \"id\": \"Y2Y2NWRhZDQtODJhMy00ODMwLTllODgtNjhkNGNmMTU3Y2U0\", //id\n            \"enname\": \"eqe\",   //英文标识\n            \"cnname\": \"一\",    //中文名称\n            \"time\": \"2017-09-03 14:16:53\"  //时间\n        }  \n    ],\n    \"msg\": \"数据查询成功\"\n}','back','2017-09-03 14:32:54'),('ZDUyNTg4YmMtZGU5ZC00MWU3LWIwZmItNWE0NmZiNmZhYjMx','后台修改二级分类','/api/back_class/amend_class_two','post','{\n oldenname_two:string  //原二级类名的英文标识\n enname_two：string    //新改变二级类名的英文标识\n cnname_two：sting     //新改变二级类名的中文标识\n}','{\n    \"code\": \"1062\",//1060二级类名冲突，1062成功，1063修改类名失败\n    \"msg\": \"修改表成功\"\n}','back','2017-09-03 17:23:20'),('ZGQ2ZmQ1ZTQtYWU0ZS00ZGM0LWJhNzUtM2Q1ZDAzMTkzNDIx','后台文章删除接口','/api/back_article/deleteOne','post','{\n  enname_one：string  //一级类名的英文标识，文章表名\n  id：string          //文章的id\n}','{\n    \"code\": \"3041\",   //3041删除成功， 3040删除失败\n    \"msg\": \"删除成功\"\n}','back','2017-09-04 13:07:11'),('ZjkxZDE3YmYtNWRiNi00MTRmLTljMjktMWE5MzU5ZDYwYjQ2','留言板消息列表请求接口','/api/back_myresume/resure_msg','get','无',' [\n        {\n            \"id\": \"ZmZiNDYyMjEtZDg1OC00NWRjLWFkNzItMDI3ZDg1Y2Y3OTk0\",\n            \"ip\": \"180.88.132.203\",\n            \"country\": \"中国\",\n            \"province\": \"北京\",\n            \"city\": \"北京\",\n            \"name\": \"士大夫但是\",\n            \"email\": \"993607220@qq.com\",\n            \"content\": \"dsaf士大夫十大\",\n            \"tel\": \"15098950322\",\n            \"type\": \"resume\",\n            \"time\": \"2017-09-17 16:52:06\"\n        }\n    ],','back','2017-09-17 17:15:24');

/*Table structure for table `client_msg` */

DROP TABLE IF EXISTS `client_msg`;

CREATE TABLE `client_msg` (
  `id` varchar(200) NOT NULL,
  `ip` varchar(200) DEFAULT NULL,
  `country` varchar(200) DEFAULT NULL,
  `province` varchar(200) DEFAULT NULL,
  `city` varchar(200) DEFAULT NULL,
  `name` varchar(200) DEFAULT NULL,
  `email` varchar(200) DEFAULT NULL,
  `content` longtext,
  `tel` varchar(200) DEFAULT NULL,
  `type` varchar(200) DEFAULT NULL,
  `time` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `client_msg` */

/*Table structure for table `one_class` */

DROP TABLE IF EXISTS `one_class`;

CREATE TABLE `one_class` (
  `id` varchar(200) NOT NULL,
  `enname` varchar(200) DEFAULT NULL,
  `cnname` varchar(200) DEFAULT NULL,
  `time` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `one_class` */

insert  into `one_class`(`id`,`enname`,`cnname`,`time`) values ('MjMzZjNlNzAtZTExOS00MTRjLTk0OWEtOWI4ZDdkZWJkYTkx','small','小程序','2017-09-28 11:38:31'),('MTgwNjFlMzQtNThhYi00MGVlLWJhYjctZjQzNDQzZWU0YTYw','tec','技术','2017-09-07 08:52:59');

/*Table structure for table `return_msg` */

DROP TABLE IF EXISTS `return_msg`;

CREATE TABLE `return_msg` (
  `id` varchar(200) NOT NULL,
  `ip` varchar(200) DEFAULT NULL,
  `name` varchar(200) DEFAULT NULL,
  `email` varchar(200) DEFAULT NULL,
  `content` longtext,
  `tel` varchar(200) DEFAULT NULL,
  `type` varchar(200) DEFAULT NULL,
  `time` datetime DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `return_msg` */

/*Table structure for table `small` */

DROP TABLE IF EXISTS `small`;

CREATE TABLE `small` (
  `LIST` int(11) NOT NULL AUTO_INCREMENT,
  `id` varchar(255) NOT NULL,
  `oneId` varchar(255) DEFAULT NULL,
  `twoId` varchar(255) DEFAULT NULL,
  `article_name` varchar(255) DEFAULT NULL,
  `editer` varchar(255) DEFAULT NULL,
  `content` longtext,
  `TIME` datetime DEFAULT NULL,
  `visitors` int(11) DEFAULT NULL,
  `daodu` varchar(255) DEFAULT NULL,
  `imgsrc` varchar(255) DEFAULT NULL,
  `recommend` tinyint(4) DEFAULT NULL,
  `art_show` tinyint(4) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `LIST` (`LIST`),
  UNIQUE KEY `id` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `small` */

/*Table structure for table `tec` */

DROP TABLE IF EXISTS `tec`;

CREATE TABLE `tec` (
  `LIST` int(11) NOT NULL AUTO_INCREMENT,
  `id` varchar(255) NOT NULL,
  `oneId` varchar(255) DEFAULT NULL,
  `twoId` varchar(255) DEFAULT NULL,
  `article_name` varchar(255) DEFAULT NULL,
  `editer` varchar(255) DEFAULT NULL,
  `content` longtext,
  `TIME` datetime DEFAULT NULL,
  `visitors` int(11) DEFAULT NULL,
  `daodu` varchar(255) DEFAULT NULL,
  `imgsrc` varchar(255) DEFAULT NULL,
  `recommend` tinyint(4) DEFAULT NULL,
  `art_show` tinyint(4) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `LIST` (`LIST`),
  UNIQUE KEY `id` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=utf8;

/*Data for the table `tec` */

insert  into `tec`(`LIST`,`id`,`oneId`,`twoId`,`article_name`,`editer`,`content`,`TIME`,`visitors`,`daodu`,`imgsrc`,`recommend`,`art_show`) values (10,'MDRjYjBjNjMtNDc3OS00ZDI5LWFlZWYtOGNkNGZlZWE0Y2Zh','MTgwNjFlMzQtNThhYi00MGVlLWJhYjctZjQzNDQzZWU0YTYw','YTZkMmYwZjgtZTI0YS00YTA4LWIzOTktNWQ0ZmJiMmJmMDMz','vue讲解','张莎','<p style=\"white-space: normal; text-align: center;\">&nbsp;vue</p><p style=\"white-space: normal;\"><span style=\"font-size: 14px; font-family: 楷体;\">四、计算属性：</span></p><p style=\"margin-left: 154px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;&nbsp;三种对于数据变化监听</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\"></span><span style=\"font-family: 楷体; font-size: 14px;\">机制：</span></p><p style=\"margin-left: 52px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">1、&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">computed：一个属性依赖于多个属性时，推荐使用</span></p><p style=\"margin-left: 52px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">2、&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">watch()：多个属性依赖一个属性是，推荐使用</span></p><p style=\"margin-left: 52px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">3、&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">Set</span><span style=\"font-family: 楷体; font-size: 14px;\">、get：</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">set</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">对一个属性设置值时，会自动的调用相应的回掉函数</span><span style=\"font-family: 楷体; font-size: 14px;\">，</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">get的回调函数会根据，</span><strong><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">函数内部</span></strong><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">依赖的属性的改变而自动改变</span></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">五、class与style</span></p><p style=\"white-space: normal; text-indent: 28px;\"><span style=\"font-family: 楷体; font-size: 14px;\">C</span><span style=\"font-family: 楷体; font-size: 14px;\">lass:</span></p><p style=\"margin-left: 66px; white-space: normal;\"><span style=\"font-family: 等线; font-size: 14px; background: rgb(248, 248, 248);\">1、&nbsp;</span><span style=\"font-family: 楷体; color: rgb(52, 73, 94); font-size: 14px; background: rgb(248, 248, 248);\">不推荐</span><span style=\"font-family: 楷体; color: rgb(233, 105, 0); font-size: 14px; background: rgb(248, 248, 248);\">class=&quot;{{ className }}&quot;</span><span style=\"font-family: 楷体; color: rgb(52, 73, 94); font-size: 14px; background: rgb(248, 248, 248);\">和</span><span style=\"font-family: Calibri; color: rgb(52, 73, 94); font-size: 14px; background: rgb(248, 248, 248);\">&nbsp;</span><span style=\"font-family: 楷体; color: rgb(233, 105, 0); font-size: 14px; background: rgb(248, 248, 248);\">v-bind:class</span><span style=\"font-family: Calibri; color: rgb(52, 73, 94); font-size: 14px; background: rgb(248, 248, 248);\">&nbsp;</span><span style=\"font-family: 楷体; color: rgb(52, 73, 94); font-size: 14px; background: rgb(248, 248, 248);\">混用</span></p><p style=\"margin-left: 66px; white-space: normal;\"><span style=\"font-family: 等线; font-size: 14px; background: rgb(248, 248, 248);\">2、&nbsp;</span><span style=\"font-family: 楷体; color: rgb(233, 105, 0); font-size: 14px; background: rgb(248, 248, 248);\">v-bind:class</span><span style=\"font-family: Calibri; color: rgb(52, 73, 94); font-size: 14px;\">&nbsp;</span><span style=\"font-family: 楷体; color: rgb(52, 73, 94); font-size: 14px;\">指令可以与普通的</span><span style=\"font-family: Calibri; color: rgb(52, 73, 94); font-size: 14px;\">&nbsp;</span><span style=\"font-family: 楷体; color: rgb(233, 105, 0); font-size: 14px; background: rgb(248, 248, 248);\">class</span><span style=\"font-family: Calibri; color: rgb(52, 73, 94); font-size: 14px;\">&nbsp;</span><span style=\"font-family: 楷体; color: rgb(52, 73, 94); font-size: 14px;\">特性共存：</span></p><p style=\"margin-left: 66px; white-space: normal;\"><span style=\"font-family: 等线; font-size: 14px;\">3、&nbsp;</span><span style=\"font-family: 楷体; color: rgb(52, 73, 94); font-size: 14px;\">把一个数组传给</span><span style=\"font-family: Calibri; color: rgb(52, 73, 94); font-size: 14px;\">&nbsp;</span><span style=\"font-family: 楷体; color: rgb(233, 105, 0); font-size: 14px; background: rgb(248, 248, 248);\">v-bind:class</span><span style=\"font-family: 楷体; color: rgb(52, 73, 94); font-size: 14px;\">，以应用一个&nbsp;class 列表</span></p><p style=\"margin-left: 66px; white-space: normal;\"><span style=\"font-family: 等线; font-size: 14px;\">4、&nbsp;</span><span style=\"font-family: 楷体; color: rgb(52, 73, 94); font-size: 14px;\">根据条件切换列表中的&nbsp;class，</span><span style=\"font-family: 楷体; color: rgb(52, 73, 94); font-size: 14px; background: rgb(0, 255, 255);\">可以用三元表达式</span><span style=\"font-family: 楷体; color: rgb(52, 73, 94); font-size: 14px; background: rgb(0, 255, 255);\">，用数组的方式</span><span style=\"font-family: 楷体; color: rgb(52, 73, 94); font-size: 14px; background: rgb(0, 255, 255);\">&nbsp;&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">可以接受一个对象</span><span style=\"font-family: 楷体; color: rgb(52, 73, 94); font-size: 14px; background: rgb(0, 255, 255);\">；</span></p><p style=\"margin-left: 66px; white-space: normal;\"><span style=\"font-family: 等线; font-size: 14px; background: rgb(0, 255, 255);\">5、&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">数组中可以将变量和对象混写</span><span style=\"font-family: 楷体; font-size: 14px;\">；</span></p><p style=\"white-space: normal; text-indent: 28px;\"><span style=\"font-family: 楷体; font-size: 14px;\">Style</span><span style=\"font-family: 楷体; font-size: 14px;\">:</span></p><p style=\"margin-left: 56px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;1</span><span style=\"font-family: 楷体; font-size: 14px;\">、</span><span style=\"font-family: 楷体; color: rgb(233, 105, 0); font-size: 14px; background: rgb(248, 248, 248);\">v-bind:style</span><span style=\"font-family: Calibri; color: rgb(52, 73, 94); font-size: 14px;\">&nbsp;</span><span style=\"font-family: 楷体; color: rgb(52, 73, 94); font-size: 14px;\">的对象语法</span><span style=\"font-family: 楷体; color: rgb(52, 73, 94); font-size: 14px;\">，</span><span style=\"font-family: 楷体; color: rgb(52, 73, 94); font-size: 14px;\">是一个&nbsp;JavaScript 对象</span><span style=\"font-family: 楷体; color: rgb(52, 73, 94); font-size: 14px;\">，可以直接写在dom中，也可以在数据中定义给一个变量；</span></p><p style=\"margin-left: 56px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">2、</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">数组的方式，可以将多个样式变量放在一起；</span></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">六、条件渲染：</span></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1、v</span><span style=\"font-family: 楷体; font-size: 14px;\">-if</span></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2</span><span style=\"font-family: 楷体; font-size: 14px;\">、template</span><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;v-if</span></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3</span><span style=\"font-family: 楷体; font-size: 14px;\">、v</span><span style=\"font-family: 楷体; font-size: 14px;\">-show</span></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4</span><span style=\"font-family: 楷体; font-size: 14px;\">、v-else</span></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">5、v-</span><span style=\"font-family: 楷体; font-size: 14px;\">else-if</span></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">七、列表渲染：</span></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v-for</span></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A</span><span style=\"font-family: 楷体; font-size: 14px;\">、数组：</span></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1、v</span><span style=\"font-family: 楷体; font-size: 14px;\">-for in</span></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2</span><span style=\"font-family: 楷体; font-size: 14px;\">、$index</span></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3</span><span style=\"font-family: 楷体; font-size: 14px;\">、（index，</span><span style=\"font-family: 楷体; font-size: 14px;\">item</span><span style=\"font-family: 楷体; font-size: 14px;\">）in items</span></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4</span><span style=\"font-family: 楷体; font-size: 14px;\">、</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">变异方法，</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">触发视图更新</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">：</span></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family: 楷体; color: rgb(233, 105, 0); font-size: 14px; background: rgb(248, 248, 248);\">Push</span><span style=\"font-family: 楷体; color: rgb(233, 105, 0); font-size: 14px; background: rgb(248, 248, 248);\">、</span><span style=\"font-family: 楷体; color: rgb(233, 105, 0); font-size: 14px; background: rgb(248, 248, 248);\">pop</span><span style=\"font-family: 楷体; color: rgb(233, 105, 0); font-size: 14px; background: rgb(248, 248, 248);\">、</span><span style=\"font-family: 楷体; color: rgb(233, 105, 0); font-size: 14px; background: rgb(248, 248, 248);\">shift</span><span style=\"font-family: 楷体; color: rgb(233, 105, 0); font-size: 14px; background: rgb(248, 248, 248);\">、</span><span style=\"font-family: 楷体; color: rgb(233, 105, 0); font-size: 14px; background: rgb(248, 248, 248);\">unshift</span><span style=\"font-family: 楷体; color: rgb(233, 105, 0); font-size: 14px; background: rgb(248, 248, 248);\">、</span><span style=\"font-family: 楷体; color: rgb(233, 105, 0); font-size: 14px; background: rgb(248, 248, 248);\">splice</span><span style=\"font-family: 楷体; color: rgb(233, 105, 0); font-size: 14px; background: rgb(248, 248, 248);\">、</span><span style=\"font-family: 楷体; color: rgb(233, 105, 0); font-size: 14px; background: rgb(248, 248, 248);\">sort</span><span style=\"font-family: 楷体; color: rgb(233, 105, 0); font-size: 14px; background: rgb(248, 248, 248);\">、</span><span style=\"font-family: 楷体; color: rgb(233, 105, 0); font-size: 14px; background: rgb(248, 248, 248);\">reverse</span><span style=\"font-family: 楷体; color: rgb(233, 105, 0); font-size: 14px; background: rgb(248, 248, 248);\">&nbsp;</span></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5、数组的</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">非变异方法</span><span style=\"font-family: 楷体; font-size: 14px;\">，</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">用返回的新数组直接替换原始数据：</span></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; color: rgb(233, 105, 0); font-size: 14px; background: rgb(248, 248, 248);\">Filter</span><span style=\"font-family: 楷体; color: rgb(233, 105, 0); font-size: 14px; background: rgb(248, 248, 248);\">、</span><span style=\"font-family: 楷体; color: rgb(233, 105, 0); font-size: 14px; background: rgb(248, 248, 248);\">concat</span><span style=\"font-family: 楷体; color: rgb(233, 105, 0); font-size: 14px; background: rgb(248, 248, 248);\">、</span><span style=\"font-family: 楷体; color: rgb(233, 105, 0); font-size: 14px; background: rgb(248, 248, 248);\">slice</span></p><p style=\"margin-left: 66px; white-space: normal;\"><span style=\"font-family: 等线; font-size: 14px;\">6、&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">track-by每个对象都有一个唯一 ID 的属性，便可以使用</span><span style=\"font-family: Calibri; font-size: 14px;\">&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">track-by</span><span style=\"font-family: Calibri; font-size: 14px;\">&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">特性给&nbsp;Vue.js 一个提示，Vue.js 因而能尽可能地复用已有实例</span></p><p style=\"margin-left: 66px; white-space: normal;\"><span style=\"font-family: 等线; font-size: 14px;\">7、&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">track-by $index</span></p><p style=\"margin-left: 66px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">如果没有唯一的键供追踪，可以使用</span><span style=\"font-family: Calibri; font-size: 14px;\">&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">track-by=&quot;$index&quot;，它强制让</span><span style=\"font-family: Calibri; font-size: 14px;\">&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">v-for</span><span style=\"font-family: Calibri; font-size: 14px;\">&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">进入原位更新模式：片断不会被移动，而是简单地以对应索引的新值刷新。这种模式也能处理数据数组中重复的值。这时&nbsp;DOM 节点不再映射数组元素顺序的改变，不能同步临时状态（比如</span><span style=\"font-family: Calibri; font-size: 14px;\">&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">&lt;input&gt;</span><span style=\"font-family: Calibri; font-size: 14px;\">&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">元素的值）以及组件的私有状态</span></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;B、对象：</span></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1、v-for</span><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;i in obj</span><span style=\"font-family: 楷体; font-size: 14px;\">遍历出每一项；</span></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2、v</span><span style=\"font-family: 楷体; font-size: 14px;\">-for (key,i) in obj</span></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C</span><span style=\"font-family: 楷体; font-size: 14px;\">、值域：</span></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">八、方法与事件：</span></p><p style=\"white-space: normal; text-indent: 28px;\"><span style=\"font-family: 楷体; font-size: 14px;\">1、方法处理器：</span><span style=\"font-family: 楷体; color: rgb(233, 105, 0); font-size: 14px; background: rgb(248, 248, 248);\">v-on</span><span style=\"font-family: Calibri; color: rgb(52, 73, 94); font-size: 14px; background: rgb(0, 255, 255);\">&nbsp;</span><span style=\"font-family: 楷体; color: rgb(52, 73, 94); font-size: 14px; background: rgb(0, 255, 255);\">指令监听&nbsp;DOM 事件</span></p><p style=\"margin-left: 56px; white-space: normal;\"><span style=\"font-family: 楷体; color: rgb(52, 73, 94); font-size: 14px;\">2、</span><span style=\"font-family: 楷体; font-size: 14px;\">内联语句处理器：方法的调用方式，可以直接出入值，或$event当前事件传入</span></p><p style=\"margin-left: 56px; white-space: normal;\"><span style=\"font-family: 楷体; color: rgb(52, 73, 94); font-size: 14px;\">3、事件修饰符：</span></p><p style=\"margin-left: 56px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">.stop:等同于调用event</span><span style=\"font-family: 楷体; font-size: 14px;\">.stopPropagetion()</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">阻止冒泡</span></p><p style=\"margin-left: 56px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;.prevent:等同于调用event</span><span style=\"font-family: 楷体; font-size: 14px;\">.preventDefault()</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">取消默认行为</span></p><p style=\"margin-left: 56px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;.capture:</span><span style=\"font-family: 楷体; font-size: 14px;\">使用capture</span><span style=\"font-family: 楷体; font-size: 14px;\">模式添加事件监听器；</span><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">捕获</span></p><p style=\"margin-left: 56px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;.self:只当事件是从</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">监听元素本身</span><span style=\"font-family: 楷体; font-size: 14px;\">时才会触发回调；</span></p><p style=\"margin-left: 52px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">4、&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">按键修饰符：</span></p><p style=\"margin-left: 52px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">KeyCode;</span></p><p style=\"margin-left: 52px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">按键别名：</span></p><p style=\"margin-left: 52px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;e</span><span style=\"font-family: 楷体; font-size: 14px;\">nter</span><span style=\"font-family: 楷体; font-size: 14px;\">、tab、delete、esc、space、up、down、left、right</span></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;&nbsp;九、表单控件绑定：</span></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1、基础用法：</span></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">T</span><span style=\"font-family: 楷体; font-size: 14px;\">ext、textarea、checkbox、radio、select</span></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">2、绑定value</span></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">v</span><span style=\"font-family: 楷体; font-size: 14px;\">-bind:value=”</span><span style=\"font-family: 楷体; font-size: 14px;\">变量</span><span style=\"font-family: 楷体; font-size: 14px;\">”</span><span style=\"font-family: 楷体; font-size: 14px;\">；</span></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v</span><span style=\"font-family: 楷体; font-size: 14px;\">-bind:value=”</span><span style=\"font-family: 楷体; font-size: 14px;\">字面量对象</span><span style=\"font-family: 楷体; font-size: 14px;\">”</span></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">3、参数特性：</span></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a href=\"http://localhost:8080/#lazy\"><span style=\"font-family: 楷体; font-size: 14px;\">lazy</span></a><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">与change 事件同步触发</span></p><p style=\"margin-left: 70px; white-space: normal;\"><a href=\"http://localhost:8080/#number\"><span style=\"font-family: 楷体; font-size: 14px;\">number</span></a><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">转换为数值形</span></p><p style=\"margin-left: 70px; white-space: normal;\"><a href=\"http://localhost:8080/#debounce\"><span style=\"font-family: 楷体; font-size: 14px;\">debounce</span></a></p><p style=\"margin-left: 70px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">Trim &nbsp;&nbsp;&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">去首尾空格</span></p><p style=\"white-space: normal;\">&nbsp; &nbsp;&nbsp;</p><p style=\"white-space: normal;\"><strong><span style=\"font-family: 楷体; font-size: 14px;\">十一、组件</span></strong></p><p style=\"white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">组件&nbsp;(Component) 是 Vue.js 最强大的功能之一</span><span style=\"font-family: 楷体; font-size: 14px;\">。组件可以扩展&nbsp;HTML 元素，封装可重用的代码。在较高层面上，组件是自定义元素，Vue.js 的编译器为它添加特殊功能。</span></p><p style=\"margin-left: 42px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">(一)&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">组件注册：</span></p><p style=\"margin-left: 42px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">组件构造器：Vue</span><span style=\"font-family: 楷体; font-size: 14px;\">.extend({ })</span><span style=\"font-family: 楷体; font-size: 14px;\">，2.0中可以不使用构造器进行构造，直接写入对象；</span></p><p style=\"margin-left: 42px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">规则：</span><span style=\"font-family: 楷体; font-size: 14px;\">对于自定义标签名，Vue.js 不强制要求遵循</span><span style=\"font-family: Calibri; font-size: 14px;\">&nbsp;</span><a href=\"http://localhost:8080/#concepts\"><span style=\"font-family: 楷体; font-size: 14px;\">W3C 规则</span></a><span style=\"font-family: Calibri; font-size: 14px;\">&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">(小写，并且包含一个短杠)，尽管遵循这个规则比较好</span></p><p style=\"margin-left: 62px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">1、&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">全局注册</span><span style=\"font-family: 楷体; font-size: 14px;\">：</span></p><p style=\"margin-top: 16px; margin-left: 62px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">全局注册需要在根实例初始化前注册，</span><span style=\"font-family: 楷体; font-size: 14px;\">这样才能使组件在</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">任意实例中被使用</span><span style=\"font-family: 楷体; font-size: 14px;\">，方式：</span><span style=\"font-family: 楷体; font-size: 14px;\">V</span><span style=\"font-family: 楷体; font-size: 14px;\">ue</span><span style=\"font-family: 楷体; font-size: 14px;\">.component(“</span><span style=\"font-family: 楷体; font-size: 14px;\">组件名</span><span style=\"font-family: 楷体; font-size: 14px;\">”,</span><span style=\"font-family: 楷体; font-size: 14px;\">组件</span><span style=\"font-family: 楷体; font-size: 14px;\">)</span></p><p style=\"margin-top: 16px; margin-left: 62px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px; background: rgb(255, 255, 0);\">2、&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(255, 255, 0);\">局部注册</span><span style=\"font-family: 楷体; font-size: 14px;\">：</span></p><p style=\"margin-top: 16px; margin-left: 62px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px; background: rgb(255, 255, 0);\">组件只能在被注册的组件中使用，而无法在其他组件中使用</span><span style=\"font-family: 楷体; font-size: 14px;\">.</span></p><p style=\"margin-top: 16px; margin-left: 62px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">3、&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">注册语法糖：</span></p><p style=\"margin-top: 16px; margin-left: 62px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">全局注册和局部注册(使用</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">components</span><span style=\"font-family: 楷体; font-size: 14px;\">属性，值为对象，组件名和组件定义对象是键值对的关系)；</span></p><p style=\"margin-left: 42px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">(二)&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">组件选项：</span></p><p style=\"margin-left: 62px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">1、&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">template：注意分析模板，is使用；</span></p><p style=\"margin-left: 62px; white-space: normal; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&lt;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">table</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&gt;</span></p><p style=\"margin-left: 62px; white-space: normal; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">&nbsp;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&lt;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">tr</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&nbsp;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">is</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">=</span><span style=\"font-family: Courier; color: rgb(66, 185, 131); font-size: 14px;\">&quot;my-row&quot;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&gt;&lt;/</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">tr</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&gt;</span></p><p style=\"margin-left: 38px; white-space: normal; text-indent: 14px; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&lt;/</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">table</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&gt;</span><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;</span></p><p style=\"margin-left: 62px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">2、&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">el和data两个属性，不可以直接赋值</span><span style=\"font-family: 楷体; font-size: 14px;\">，比如data如果直接赋值，组件使用多次的时候，多个组件将公用一个对象；如果一个改变，则所有都会改变；所以使用function方式，每次return出一个新的对象；el类似；由于el很少直接在组件中挂载，所以可以忽略；</span></p><p style=\"margin-left: 62px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">3、&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">props：</span></p><p style=\"margin-left: 62px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">组件间的作用域是孤立的</span><span style=\"font-family: 楷体; font-size: 14px;\">，这里跟angular的指令作用域有所不同，angular指令的默认作用域是公用的，不管是在子指令还是父指令中定义的；在vue中，</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">props起到了父组件向下与子组件间的桥梁作用；子组件给父组件发送消息，需要events；</span></p><p style=\"margin-left: 90px; white-space: normal;\"><span style=\"font-family: Wingdings; font-size: 14px; background: rgb(0, 255, 255);\">n&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">驼峰命名：html的属性不区分大小写</span><span style=\"font-family: 楷体; font-size: 14px;\">；</span></p><p style=\"margin-left: 90px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;</span></p><p style=\"margin-left: 90px; white-space: normal;\"><span style=\"font-family: Wingdings; font-size: 14px;\">n&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">动态props：</span></p><p style=\"margin-left: 90px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">通过v-bind进行绑定；</span></p><p style=\"margin-left: 90px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">如果要进行数值的传递，必须通过动态绑定，否则直接传递过去的是个字符串；</span></p><p style=\"margin-left: 90px; white-space: normal;\"><span style=\"font-family: Wingdings; font-size: 14px;\">n&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">props的接受：</span></p><p style=\"margin-left: 90px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">在子组件中使用props属性进行接受，props的值可以为数组（不可做校验），可以为对象（可以做校验）</span></p><p style=\"margin-left: 90px; white-space: normal;\"><span style=\"font-family: Wingdings; font-size: 14px;\">n&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">props数据的处理：</span></p><p style=\"margin-left: 90px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">不应该在子组件中进行prop值的改变，</span><span style=\"font-family: 楷体; font-size: 14px;\">因为prop的值是随父组件进行更变，如果在组件中直接对prop进行改变，vue则会抛出警告</span></p><p style=\"margin-left: 90px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">正确的处理方式：</span></p><p style=\"margin-left: 118px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">a)&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">定义一个局部变量，并用&nbsp;prop 的值初始化它</span><span style=\"font-family: 楷体; font-size: 14px;\">：（只会在初始化时，进行一次赋值，后期不会动态改变）</span></p><p style=\"margin-left: 118px; white-space: normal; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">props: [</span><span style=\"font-family: Courier; color: rgb(66, 185, 131); font-size: 14px;\">&#39;initialCounter&#39;</span><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">],</span></p><p style=\"margin-left: 118px; white-space: normal; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">data</span><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">:&nbsp;</span><span style=\"font-family: Courier; color: rgb(0, 146, 219); font-size: 14px;\">function</span><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">&nbsp;()&nbsp;</span><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">{</span></p><p style=\"margin-left: 118px; white-space: normal; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">&nbsp;&nbsp;</span><span style=\"font-family: Courier; color: rgb(233, 105, 0); font-size: 14px;\">return</span><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">&nbsp;{&nbsp;</span><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">counter</span><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">:&nbsp;</span><span style=\"font-family: Courier; color: rgb(233, 105, 0); font-size: 14px;\">this</span><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">.initialCounter }</span></p><p style=\"margin-left: 118px; white-space: normal; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">}</span></p><p style=\"margin-left: 118px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">b)&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">定义一个计算属性，处理prop的值并返回：</span><span style=\"font-family: 楷体; font-size: 14px;\">（进行属性值的动态跟踪）</span></p><p style=\"margin-left: 118px; white-space: normal; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">props: [</span><span style=\"font-family: Courier; color: rgb(66, 185, 131); font-size: 14px;\">&#39;size&#39;</span><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">],</span></p><p style=\"margin-left: 118px; white-space: normal; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">computed</span><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">: {</span></p><p style=\"margin-left: 118px; white-space: normal; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">&nbsp;&nbsp;</span><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">normalizedSize</span><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">:&nbsp;</span><span style=\"font-family: Courier; color: rgb(0, 146, 219); font-size: 14px;\">function</span><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">&nbsp;()&nbsp;</span><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">{</span></p><p style=\"margin-left: 118px; white-space: normal; text-indent: 14px; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">&nbsp;&nbsp;&nbsp;</span><span style=\"font-family: Courier; color: rgb(233, 105, 0); font-size: 14px;\">return</span><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">&nbsp;</span><span style=\"font-family: Courier; color: rgb(233, 105, 0); font-size: 14px;\">this</span><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">.size.trim().toLowerCase()</span></p><p style=\"margin-left: 118px; white-space: normal; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">&nbsp;&nbsp;}</span></p><p style=\"margin-left: 118px; white-space: normal; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">}</span></p><p style=\"margin-left: 90px; white-space: normal;\"><span style=\"font-family: Wingdings; font-size: 14px;\">n&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">绑定类型：</span></p><p style=\"margin-left: 118px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">1)&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">默认时一直跟随父组件值得变化而变化，</span></p><p style=\"margin-left: 118px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">2)&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">.sync:双向绑定（取消）；在2.3.0以后,再次以事件监听实现双向数据流；如：</span></p><p style=\"margin-left: 118px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">父组件：</span></p><p style=\"margin-left: 118px; white-space: normal;\"><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px; background: rgb(248, 248, 248);\">&lt;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px; background: rgb(248, 248, 248);\">comp</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px; background: rgb(248, 248, 248);\">&nbsp;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px; background: rgb(248, 248, 248);\">:foo</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px; background: rgb(248, 248, 248);\">=</span><span style=\"font-family: Courier; color: rgb(66, 185, 131); font-size: 14px; background: rgb(248, 248, 248);\">&quot;bar&quot;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px; background: rgb(248, 248, 248);\">&nbsp;@</span><span style=\"font-family: 宋体; color: rgb(41, 115, 183); font-size: 14px; background: rgb(248, 248, 248);\">updata</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px; background: rgb(248, 248, 248);\">=</span><span style=\"font-family: Courier; color: rgb(66, 185, 131); font-size: 14px; background: rgb(248, 248, 248);\">&quot;val =&gt; bar = val&quot;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px; background: rgb(248, 248, 248);\">&gt;&lt;/</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px; background: rgb(248, 248, 248);\">comp</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px; background: rgb(248, 248, 248);\">&gt;</span></p><p style=\"margin-left: 118px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">子组件</span><span style=\"font-family: 楷体; font-size: 14px;\">：</span></p><p style=\"margin-left: 118px; white-space: normal;\"><span style=\"font-family: Courier; color: rgb(233, 105, 0); font-size: 14px; background: rgb(248, 248, 248);\">this</span><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px; background: rgb(248, 248, 248);\">.$emit(</span><span style=\"font-family: Courier; color: rgb(66, 185, 131); font-size: 14px; background: rgb(248, 248, 248);\">&#39;update:foo&#39;</span><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px; background: rgb(248, 248, 248);\">, newValue)</span></p><p style=\"margin-left: 118px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">3)&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">.</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">once:单次绑定，子组件接受一次父组件传递的数据后，单独对这份数据进行维护；（2.0版本后取消此修饰符</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">）</span></p><p style=\"margin-left: 90px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">注：</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">如果prop传递的是一个引用类型的数据，如对象或数组，即使单向绑定，子组件也会影响父组件；（传递为单向传递）</span></p><p style=\"margin-left: 90px; white-space: normal;\"><span style=\"font-family: Wingdings; font-size: 14px;\">n&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">P</span><span style=\"font-family: 楷体; font-size: 14px;\">rops验证：</span></p><p style=\"margin-left: 118px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">1)&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">基础类型检测：prop：</span><span style=\"font-family: 楷体; font-size: 14px;\">N</span><span style=\"font-family: 楷体; font-size: 14px;\">umber，接受的参数为原生的构造器：String、</span><span style=\"font-family: 楷体; font-size: 14px;\">N</span><span style=\"font-family: 楷体; font-size: 14px;\">umber、Boolen、Function、Object、</span><span style=\"font-family: 楷体; font-size: 14px;\">A</span><span style=\"font-family: 楷体; font-size: 14px;\">arry、Symbol、Null（意味着任何类型都行）</span></p><p style=\"margin-left: 118px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">2)&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">可以为多种类型：prop：[</span><span style=\"font-family: 楷体; font-size: 14px;\">Number</span><span style=\"font-family: 楷体; font-size: 14px;\">，</span><span style=\"font-family: 楷体; font-size: 14px;\">S</span><span style=\"font-family: 楷体; font-size: 14px;\">tring]</span></p><p style=\"margin-left: 118px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">3)&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">参数必须：prop:{</span><span style=\"font-family: 楷体; font-size: 14px;\">type:Number,required:true</span><span style=\"font-family: 楷体; font-size: 14px;\">}</span><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">对象的写法</span></p><p style=\"margin-left: 118px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">4)&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">参数默认：prop</span><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;{</span><span style=\"font-family: 楷体; font-size: 14px;\">type:Number,default:0}</span><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">对象的写法</span></p><p style=\"margin-left: 118px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">5)&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">绑定类型：prop：{two</span><span style=\"font-family: 楷体; font-size: 14px;\">Way:true</span><span style=\"font-family: 楷体; font-size: 14px;\">}</span><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">校验数据绑定类型，如果非双向绑定会抛出一条警告；（这个不用了）</span></p><p style=\"margin-left: 118px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">6)&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">自定义验证函数：prop：{validator：function(</span><span style=\"font-family: 楷体; font-size: 14px;\">val</span><span style=\"font-family: 楷体; font-size: 14px;\">){</span><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;return val&gt;1</span><span style=\"font-family: 楷体; font-size: 14px;\">}</span><span style=\"font-family: 楷体; font-size: 14px;\">,</span><span style=\"font-family: 楷体; font-size: 14px;\">这样就可以验证一个数值是否大于1；</span></p><p style=\"margin-left: 42px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">(三)&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">非Prop属性：</span></p><p style=\"margin-left: 52px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">1、&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">在组件上使用自定义属性，如果不在子组件中使用props进行接受，则此属性会被默认添加到组件的根元素上；</span></p><p style=\"margin-left: 52px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">2、&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">在组件上使用html元素已有的属性，如</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">class、style</span><span style=\"font-family: 楷体; font-size: 14px;\">等，则组件上的属性值，会和组件的根节点的相应属性值进行</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">合并</span><span style=\"font-family: 楷体; font-size: 14px;\">等特性；如type等属性值，会进行</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">覆盖或替换</span><span style=\"font-family: 楷体; font-size: 14px;\">；如：组件中的input的type为number，使用组件时传入的type值为text，则组件内部的input的type值将被替换为text；</span></p><p style=\"margin-left: 42px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">(四)&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">组件间通信:</span></p><p style=\"margin-left: 66px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">1、&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">直接访问：</span></p><p style=\"margin-left: 98px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">1)&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">$parent:父组件实例</span></p><p style=\"margin-left: 98px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">2)&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">$children：包含所有子组件实例</span></p><p style=\"margin-left: 98px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">3)&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">$root：组件所在的根实例；</span></p><p style=\"margin-left: 70px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">这三个属性都挂载在组件的this上，不</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">推荐这样做，会造成父子组件间的</span><strong><span style=\"text-decoration-line: underline;\"><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">强耦合</span></span></strong><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">；</span></p><p style=\"margin-left: 66px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">2、&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">自定义事件监听：</span></p><p style=\"margin-left: 98px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">1)&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">组件实例化时，在组件的标签上使用@进行事件的监听</span><span style=\"font-family: 楷体; font-size: 14px;\">；</span></p><p style=\"margin-left: 66px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">3、&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">自定义事件触发机制：</span></p><p style=\"margin-left: 98px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">1)&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">$emit:在实例本身上触发事件；在子组件的钩子函数中去触发事件</span><span style=\"font-family: 楷体; font-size: 14px;\">；</span></p><p style=\"margin-left: 66px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">4、&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">子组件索引：</span></p><p style=\"margin-left: 98px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">通过</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">ref</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">指令，绑定一个子组件，</span><span style=\"font-family: 楷体; font-size: 14px;\">可以在父组件中使用</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">this.$</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">ref</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">s</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">.</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">属性名&nbsp;&nbsp;的方式获取子组件；</span></p><p style=\"margin-left: 66px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">5、&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">非父子通信：</span></p><p style=\"margin-left: 66px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">思想：</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">建立一个空的vue实例作为中央事件总线，即全局的vue实例；</span></p><p style=\"margin-left: 66px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">代码如下：</span></p><p style=\"margin-left: 66px; white-space: normal;\"><span style=\"font-family: Courier; color: rgb(233, 105, 0); font-size: 14px; background: rgb(248, 248, 248);\">var</span><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px; background: rgb(248, 248, 248);\">&nbsp;bus =&nbsp;</span><span style=\"font-family: Courier; color: rgb(233, 105, 0); font-size: 14px; background: rgb(248, 248, 248);\">new</span><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px; background: rgb(248, 248, 248);\">&nbsp;Vue()</span></p><p style=\"white-space: normal; text-indent: 25px; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: Courier; color: rgb(179, 179, 179); font-size: 14px;\">//&nbsp;<span style=\"font-family: 宋体;\">触发组件&nbsp;</span>A&nbsp;<span style=\"font-family: 宋体;\">中的事件</span></span></p><p style=\"white-space: normal; text-indent: 25px; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">bus.$emit(</span><span style=\"font-family: Courier; color: rgb(66, 185, 131); font-size: 14px;\">&#39;id-selected&#39;</span><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">,&nbsp;</span><span style=\"font-family: Courier; color: rgb(174, 129, 255); font-size: 14px;\">1</span><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">)</span></p><p style=\"white-space: normal; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: Courier; color: rgb(179, 179, 179); font-size: 14px;\">//&nbsp;<span style=\"font-family: 宋体;\">在组件&nbsp;</span>B&nbsp;<span style=\"font-family: 宋体;\">创建的钩子中监听事件</span></span></p><p style=\"white-space: normal; text-indent: 25px; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">bus.$on(</span><span style=\"font-family: Courier; color: rgb(66, 185, 131); font-size: 14px;\">&#39;id-selected&#39;</span><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">,&nbsp;</span><span style=\"font-family: Courier; color: rgb(0, 146, 219); font-size: 14px;\">function</span><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">&nbsp;(</span><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">id</span><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">)&nbsp;</span><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">{</span></p><p style=\"white-space: normal; text-indent: 25px; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">&nbsp;&nbsp;</span><span style=\"font-family: Courier; color: rgb(179, 179, 179); font-size: 14px;\">// ...</span></p><p style=\"white-space: normal; text-indent: 25px; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">})</span></p><p style=\"margin-left: 42px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">(五)&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">内容分发：</span></p><p style=\"margin-left: 70px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">1、&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">基础用法：</span></p><p style=\"margin-left: 84px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">提供一种混合父组件内容与子组件自己模板的方式叫做内容分发；</span></p><p style=\"margin-left: 84px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">S</span><span style=\"font-family: 楷体; font-size: 14px;\">lot标签；</span></p><p style=\"margin-left: 70px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">2、&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">使用需求：</span></p><p style=\"margin-left: 70px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">当子组件中的dom结构以及展示的内容由父组件决定时</span></p><p style=\"margin-left: 70px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">3、&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">编译作用域：</span></p><p style=\"margin-left: 42px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果在子组件的模板中使用{{}}解析数据，则模板会解析自己作用域中的数据，而不是解析父组件作用中的数据；</span></p><p style=\"margin-left: 70px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">4、&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">默认slot：</span></p><p style=\"margin-left: 42px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;&nbsp;&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">&lt;slot&gt;标签允许有一个匿名slot，不需要name值，</span><span style=\"font-family: 楷体; font-size: 14px;\">作为找不到匹配的内容片段的回退插槽，如果没有默认的slot，这些找不到匹配的</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">内容片段将被忽略；</span></p><p style=\"margin-left: 70px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">5、&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">作用域插槽：</span></p><p style=\"margin-left: 70px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">在父组件的slot模板中使用子组件中数据；如：</span></p><p style=\"margin-left: 70px; white-space: normal; text-indent: 25px; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: 宋体; color: rgb(41, 115, 183); font-size: 14px;\">//子组件</span></p><p style=\"margin-left: 70px; white-space: normal; text-indent: 25px; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&lt;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">div</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&nbsp;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">class</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">=</span><span style=\"font-family: Courier; color: rgb(66, 185, 131); font-size: 14px;\">&quot;child&quot;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&gt;</span></p><p style=\"margin-left: 70px; white-space: normal; text-indent: 25px; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">&nbsp;&nbsp;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&lt;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">slot</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&nbsp;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">text</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">=</span><span style=\"font-family: Courier; color: rgb(66, 185, 131); font-size: 14px;\">&quot;hello from child&quot;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&gt;&lt;/</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">slot</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&gt;</span></p><p style=\"margin-left: 70px; white-space: normal; text-indent: 25px; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&lt;/</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">div</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&gt;</span></p><p style=\"margin-left: 70px; white-space: normal; text-indent: 25px; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: 宋体; color: rgb(41, 115, 183); font-size: 14px;\">//父组件</span></p><p style=\"margin-left: 70px; white-space: normal; text-indent: 25px; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&lt;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">div</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&nbsp;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">class</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">=</span><span style=\"font-family: Courier; color: rgb(66, 185, 131); font-size: 14px;\">&quot;parent&quot;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&gt;</span></p><p style=\"margin-left: 70px; white-space: normal; text-indent: 25px; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">&nbsp;&nbsp;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&lt;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">child</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&gt;</span></p><p style=\"margin-left: 70px; white-space: normal; text-indent: 25px; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&lt;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">template</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&nbsp;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">scope</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">=</span><span style=\"font-family: Courier; color: rgb(66, 185, 131); font-size: 14px;\">&quot;props&quot;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&gt;</span></p><p style=\"margin-left: 70px; white-space: normal; text-indent: 25px; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&lt;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">span</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&gt;</span><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">hello from parent</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&lt;/</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">span</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&gt;</span></p><p style=\"margin-left: 70px; white-space: normal; text-indent: 25px; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&lt;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">span</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&gt;</span><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">{{ props.text }}</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&lt;/</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">span</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&gt;</span></p><p style=\"margin-left: 70px; white-space: normal; text-indent: 25px; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&lt;/</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">template</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&gt;</span></p><p style=\"margin-left: 70px; white-space: normal; text-indent: 25px; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: Courier; color: rgb(82, 82, 82); font-size: 14px;\">&nbsp;&nbsp;</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&lt;/</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">child</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&gt;</span></p><p style=\"margin-left: 70px; white-space: normal; text-indent: 25px; line-height: 24px; background: rgb(248, 248, 248);\"><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&lt;/</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">div</span><span style=\"font-family: Courier; color: rgb(41, 115, 183); font-size: 14px;\">&gt;</span></p><p style=\"margin-left: 70px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">在父级中，</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">具有特殊属性</span><span style=\"font-family: Calibri; font-size: 14px; background: rgb(0, 255, 255);\">&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">scope</span><span style=\"font-family: Calibri; font-size: 14px; background: rgb(0, 255, 255);\">&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">的</span><span style=\"font-family: Calibri; font-size: 14px; background: rgb(0, 255, 255);\">&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">&lt;template&gt;</span><span style=\"font-family: Calibri; font-size: 14px; background: rgb(0, 255, 255);\">&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">元素必须存在</span><span style=\"font-family: 楷体; font-size: 14px;\">，表示它是作用域插槽的模板。scope</span><span style=\"font-family: Calibri; font-size: 14px;\">&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">的值对应一个临时变量名，</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">此变量接收从子组件中传递的&nbsp;props 对象</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">；</span></p><p style=\"margin-left: 70px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">在slot中可以动态绑定属性值，绑定的属性需要在父组件的scope中进行显示声明；</span></p><p style=\"margin-left: 42px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">(六)&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px;\">动态组件：</span></p><p style=\"margin-left: 42px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">1、基础用法：</span></p><p style=\"margin-left: 42px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">component 标签上 is 属性决定了当前采用的子组件</span><span style=\"font-family: 楷体; font-size: 14px;\">，:is 是 v-bind:is 的缩写，绑定了父 组件中 data 的 currentView 属性。顶部的 ul 则起到导航的作用，点击即可修改 currentView 值，也就修改 component 标签中使用的子组件类型，需要注意的事，</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">currentView 的值需要</span><span style=\"font-family: 楷体; font-size: 14px;\">&nbsp;和父组件实例中的&nbsp;components&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">属性的&nbsp;key 相对应</span><span style=\"font-family: 楷体; font-size: 14px;\">。</span><span style=\"font-family: 楷体; font-size: 14px;\">（起到路由的作用）</span></p><p style=\"margin-left: 42px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px;\">2、keep-alive</span></p><p style=\"margin-left: 42px; white-space: normal;\"><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">在</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">component 标签</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">外层包裹一个</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">&nbsp;keep-alive&nbsp;</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">标签</span><span style=\"font-family: 楷体; font-size: 14px; background: rgb(0, 255, 255);\">，可以将切换出去的组件保留在内存中，避免重新&nbsp;渲染。</span></p><p style=\"margin-left: 80px; white-space: normal;\"><br/></p>','2017-09-04 11:41:21',0,'紧跟时代潮流学好前端流行框架','undefined',1,1),(12,'Y2JjMDczOGEtOTMzYy00M2JhLWI1ZTAtOTZjMTlhMzQzZGY4','MTgwNjFlMzQtNThhYi00MGVlLWJhYjctZjQzNDQzZWU0YTYw','ZDY1NDJmNmItODI1MS00MmE1LTgxM2MtNzNiYjMxNzE5ZjBh','方法','zs','<p><img src=\"/ueditor/images/917538882646577152.jpg\" title=\"\" alt=\"1457835930722+-1395365622.jpg\"/></p>','2017-10-06 07:55:15',0,'地方规划局快乐','undefined',1,1),(1,'YjAzMGIxMTktN2EyYS00YjYzLWI5NzMtMDU0MWJjYmQ1OTY3','MTgwNjFlMzQtNThhYi00MGVlLWJhYjctZjQzNDQzZWU0YTYw','YTZkMmYwZjgtZTI0YS00YTA4LWIzOTktNWQ0ZmJiMmJmMDMz','vue的优势及使用','张莎','<p style=\"text-align:center\"><span style=\";font-family:楷体;font-size:14px\">vue的优势及使用</span></p><p><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">一、简介：</span>(为什么使用vue)</span></strong></p><p style=\"margin-left: 66px\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px\">1、&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">与</span>angular相比优点:</span></strong></p><p style=\"margin-left: 94px\"><span style=\"font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">a)&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">api简单，快速上手，学习成本低；</span></p><p style=\";margin-left: 94px\"><span style=\"font-family:楷体;font-size:14px\">b)&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">Angular 使用双向绑定，Vue 也支持双向绑定，不过为</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">单向</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">数据流</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">，数据从父组件单向传给子组件</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">；</span></span></p><p style=\";text-indent: 79px\"><span style=\"font-family:楷体;font-size:14px\">c)&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">Vue.js 中指令和组件分得更清晰。指令只封装 DOM 操作，而组件代表一个</span> <span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">自给自足的独</span></span> &nbsp; &nbsp;<span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">立单元</span> —— </span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">有自己的视图和数据逻辑</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">。</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">在</span>Angular 中两者有不少相混的地方</span></p><p style=\"margin-left: 94px\"><span style=\"font-family:楷体;font-size:14px\">d)&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">A</span><span style=\";font-family:楷体;font-size:14px\">ngular的脏检查机制，造成了如果项目庞大之后性能降低问题；每一次更新数据，都导致所有的数据绑定，进行一次遍历；</span></p><p style=\"margin-left: 94px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\">V</span><span style=\";font-family:楷体;font-size:14px\">ue的数据变化更新是</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">根据</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">依赖追踪的观</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">察系统并且异步列队</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">去更新</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">，数据变化都是独立</span></span><span style=\";font-family:楷体;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">的触发队列中相应的事件；</span></span></p><p style=\"margin-left: 94px\"><span style=\"font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">e)&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">渲染层创建了虚拟</span>dom</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">（轻量级，</span>2.0），</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">减少了内存开销和加快了渲染速度；</span></span></p><p style=\"margin-left: 94px\"><span style=\"font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">f)&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">组件式开发</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">，每个组件都具有生命周期，便于自己状态的维护；实现了代码的高复用性；</span></span></p><p style=\"margin-left: 66px\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px\">2、&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">与</span>react相比：</span></strong></p><p style=\"margin-left: 94px\"><span style=\"font-family:Wingdings;font-size:14px\">l&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">共同点：</span></span></p><p style=\"margin-left: 122px\"><span style=\"font-family:楷体;font-size:14px\">a)&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">使用</span></span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">Virtual DOM</span></p><p style=\"margin-left: 122px\"><span style=\"font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">b)&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">提供了响应式（</span>Reactive）和组件化（Composable）的视图组件</span><span style=\";font-family:楷体;font-size:14px\">&nbsp;</span></p><p style=\"margin-left: 122px\"><span style=\"font-family:楷体;font-size:14px\">c)&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">将注意力集中保持在核心库，而将</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">其他功能如路由和全局状态管理交给相关的库</span></span></p><p style=\"margin-left: 94px\"><span style=\"font-family:Wingdings;font-size:14px\">l&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">优势：</span></span></p><p style=\"margin-left: 112px\"><span style=\"font-family:Wingdings;font-size:14px\">²&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">性能：</span></span><span style=\";font-family:楷体;font-size:14px\">&nbsp;&nbsp;</span></p><p style=\"margin-left: 140px\"><span style=\"font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">a)&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">vue的更新渲染过程是自动追踪的</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">，而</span>react如果想要提高更新的性能需要通过should</span><span style=\";font-family:楷体;font-size:14px\">C</span><span style=\";font-family:楷体;font-size:14px\">om</span><span style=\";font-family:楷体;font-size:14px\">ponentUpdate</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">钩子函数对数据进行对比；</span></span></p><p style=\"margin-left: 140px\"><span style=\"font-family:楷体;font-size:14px\">b)&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">对于组件的语法，在</span>vue中既可以</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">支持</span>jsx</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">语法，将</span>css和html都写入js文件中，又可以</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">使用</span>template</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">模板进行编译，</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">在</span>vue中推荐使用template模板进行编译</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">，</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">减少学习成本，</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">更加符合前端开发语法；而</span>react仅仅支持jsx语法，jsx的优点：一、开发工具对jsx的支持比其他的vue模板更先进；</span></p><p style=\"margin-left: 140px\"><span style=\"font-family:楷体;font-size:14px\">c)&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">对于</span>css的支持：</span></p><p style=\"margin-left: 140px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">vue中可以直接在style中写css语法，</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">可以支持媒体查询，等等一切</span>css属性，并且可以</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">通过</span>scoped进行组件作用域的封闭</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">；</span></span></p><p style=\"margin-left: 140px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\">react的组件中如果进行css样式的隔离，</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">只能写入</span>js文件中，</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">比较简单的样式可以进行支持，但是如果比较复杂的则无法支持；</span></span></p><p style=\"margin-left: 112px\"><span style=\"font-family:Wingdings;font-size:14px\">²&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">规模：</span></span></p><p style=\"margin-left: 112px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">共同点：</span></span></p><p style=\"margin-left: 112px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">都提供了路由和状态管理机制；</span></span></p><p style=\"margin-left: 112px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">都有自己的自动化构建工具；</span></span></p><p style=\"margin-left: 112px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">不同点：</span></span></p><p style=\"margin-left: 112px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">react的学习成本比较高</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">，</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">需要掌握</span>jsx语法和es2015</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">；</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">虽然支持前端</span>babel进行编译</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">，</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">但是不适合生产环境；</span></span></p><p style=\"margin-left: 112px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\">&nbsp;&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">vue向下扩展可以像jq那样使用在前端项目中</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">，</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">向上扩展可以像</span>react一样进行前端的自动化构建；</span></p><p style=\"margin-left: 112px\"><span style=\"font-family:Wingdings;font-size:14px\">²&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">本地渲染：</span>(跨平台)</span></p><p style=\"margin-left: 112px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\">react</span><span style=\";font-family:楷体;font-size:14px\">Native</span></p><p style=\"margin-left: 112px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\">weex</span></p><p style=\"margin-left: 66px\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px\">3、&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">总结</span>vue：</span></strong></p><p style=\"margin-left: 66px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">优点：</span></span></p><p style=\"margin-left: 112px\"><span style=\"font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">a)&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">MVVM的开发模式，从dom中解脱出来，双向数据绑定；</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;</span></p><p style=\"margin-left: 112px\"><span style=\"font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">b)&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">数据更新采用异步事件机制；</span></span></p><p style=\"margin-left: 112px\"><span style=\"font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">c)&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">采用单向数据流；</span></span></p><p style=\"margin-left: 112px\"><span style=\"font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">d)&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">组件式开发；</span></span></p><p style=\"margin-left: 112px\"><span style=\"font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">e)&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">采用虚拟</span>dom</span></p><p style=\"margin-left: 112px\"><span style=\"font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">f)&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">支持模板和</span>jsx两种开发模式；</span></p><p style=\"margin-left: 112px\"><span style=\"font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">g)&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">可以进行服务端渲染；</span></span></p><p style=\"margin-left: 112px\"><span style=\"font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">h)&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">扩展性强，既可以向上又可以向下扩展</span></span></p><p style=\"margin-left: 56px\"><span style=\";font-family:楷体;font-size:14px\">&nbsp;<span style=\"font-family:楷体\">缺点：</span></span></p><p style=\"margin-left: 112px\"><span style=\"font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">a)&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">不兼容</span>IE8以下版本</span></p><p style=\"margin-left: 112px\"><span style=\"font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">b)&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">生态圈不繁荣，开源社区不活跃；</span></span></p><p><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">二、安装与使用：</span></span></strong></p><p style=\"margin-left: 19px;text-indent: 0\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px\">1、&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">直接使用</span></span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\">CDN</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">引入：</span></span></strong></p><p style=\"margin-left: 47px;text-indent: 9px;line-height: 19px;background: rgb(255, 255, 255)\"><span style=\";font-family:楷体;color:rgb(128,0,0);font-size:14px\">&lt;script</span><span style=\"font-family: 楷体;font-size: 14px\">&nbsp;</span><span style=\";font-family:楷体;color:rgb(255,0,0);font-size:14px\">src</span><span style=\"font-family: 楷体;font-size: 14px\">=</span><span style=\";font-family:楷体;color:rgb(0,0,255);font-size:14px\">&quot;https://unpkg.com/vue&quot;</span><span style=\";font-family:楷体;color:rgb(128,0,0);font-size:14px\">&gt;&lt;/script&gt;</span></p><p style=\"margin-left: 47px;text-indent: 9px;line-height: 19px;background: rgb(255, 255, 255)\"><span style=\"font-family: 楷体;font-size: 14px\">&nbsp;</span></p><p style=\"margin-left: 19px;text-indent: 0\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px\">2、&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">下载到本地：</span></span></strong> <span style=\";font-family:楷体;font-size:14px\">&nbsp;&nbsp;&nbsp;</span></p><p><span style=\";font-family:楷体;font-size:14px\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">&nbsp;&nbsp;</span> <span style=\";font-family:楷体;font-size:14px\">https://vuejs.org/js/vue.js</span><span style=\";font-family:楷体;font-size:14px\">&nbsp;</span></p><p><span style=\";font-family:楷体;font-size:14px\">&nbsp;</span></p><p style=\"margin-left: 19px;text-indent: 0\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px\">3、&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">自动化构建工具：</span></span></strong></p><p style=\"margin-left: 56px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\">&nbsp;</span></p><p style=\"margin-left: 38px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\">Vue.js 有一款官方的脚手架生成工具 vue-cli:</span></p><p style=\"margin-left: 38px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\">&nbsp;</span></p><p style=\"margin-left: 94px\"><span style=\"font-family:Wingdings;font-size:14px\">l&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">全局安装</span></span></p><p style=\"margin-left: 94px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\">npm install –g vue-cli</span></p><p style=\"margin-left: 94px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\">&nbsp;</span></p><p style=\"margin-left: 94px\"><span style=\"font-family:Wingdings;font-size:14px\">l&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">创建项目</span></span></p><p style=\"margin-left: 76px;text-indent: 18px\"><span style=\";font-family:楷体;font-size:14px\">vue init webpack myproject</span></p><p style=\"margin-left: 76px;text-indent: 18px\"><span style=\";font-family:楷体;font-size:14px\">&nbsp;</span></p><p style=\"margin-left: 94px\"><span style=\"font-family:Wingdings;font-size:14px\">l&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">安装依赖包</span></span></p><p style=\"margin-left: 76px;text-indent: 18px\"><span style=\";font-family:楷体;font-size:14px\">npm</span><span style=\";font-family:楷体;font-size:14px\">&nbsp;install</span></p><p style=\"margin-left: 76px;text-indent: 18px\"><span style=\";font-family:楷体;font-size:14px\">&nbsp;</span></p><p style=\"margin-left: 94px\"><span style=\"font-family:Wingdings;font-weight:bold;font-size:14px\">l&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">目录如下：</span></span></strong></p><p style=\"margin-left: 76px;text-indent: 18px\"><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">build: 用于存放 webpack 相关配置和脚本。 </span></p><p style=\"margin-left: 84px;text-indent: 8px\"><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">config: 主要存放配置文件，用于区分开发环境、测试环境、线上环境的不同。 </span></p><p style=\"margin-left: 74px;text-indent: 18px\"><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">src: 项目源码及需要引用的资源文件。 </span></p><p style=\"margin-left: 56px;text-indent: 28px\"><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">static: 不需要 webpack 处理的静态资源。 </span></p><p style=\"margin-left: 66px;text-indent: 18px\"><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">test: 用于存放测试文件</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">；</span></span></p><p style=\"margin-left: 94px\"><span style=\"font-family:Wingdings;font-weight:bold;font-size:14px\">l&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">启动服务：</span></span></strong></p><p style=\"margin-left: 84px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">正常开发时，就会运行命令</span></span><span style=\";font-family:楷体;font-size:14px\">npm run dev，启动一个小型的express 服务。在这个 express 服务中，会使用webpack-dev-middleware 和 webpack-hot-middleware 这两个 中间件，来进行项目的热部署，即每次修改 src 中的文件后，不需要再按浏览器的刷新来更新 代码，</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">启动的</span> server 服务会自动监听文件的变化并编译，通知浏览器自动刷新。</span></p><p style=\"margin-left: 94px\"><span style=\"font-family:Wingdings;font-weight:bold;font-size:14px\">l&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">分析</span>packjson文件：</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\">&nbsp;</span></strong></p><p style=\"margin-left: 94px;text-indent: 0\"><strong><span style=\"font-family: 楷体;font-size: 14px\">&nbsp;</span></strong></p><p style=\"margin-left: 84px;line-height: 19px;background: rgb(255, 255, 255)\"><span style=\";font-family:楷体;color:rgb(4,81,165);font-size:14px\">&quot;scripts&quot;</span><span style=\"font-family: 楷体;font-size: 14px\">: {</span></p><p style=\"margin-left: 84px;line-height: 19px;background: rgb(255, 255, 255)\"><span style=\"font-family: 楷体;font-size: 14px\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\";font-family:楷体;color:rgb(4,81,165);font-size:14px\">&quot;dev&quot;</span><span style=\"font-family: 楷体;font-size: 14px\">: </span><span style=\";font-family:楷体;color:rgb(163,21,21);font-size:14px\">&quot;node build/dev-server.js&quot;</span><span style=\"font-family: 楷体;font-size: 14px\">,</span></p><p style=\"margin-left: 84px;line-height: 19px;background: rgb(255, 255, 255)\"><span style=\"font-family: 楷体;font-size: 14px\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\";font-family:楷体;color:rgb(4,81,165);font-size:14px\">&quot;start&quot;</span><span style=\"font-family: 楷体;font-size: 14px\">: </span><span style=\";font-family:楷体;color:rgb(163,21,21);font-size:14px\">&quot;node build/dev-server.js --open&quot;</span><span style=\"font-family: 楷体;font-size: 14px\">,</span></p><p style=\"margin-left: 84px;line-height: 19px;background: rgb(255, 255, 255)\"><span style=\"font-family: 楷体;font-size: 14px\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\";font-family:楷体;color:rgb(4,81,165);font-size:14px\">&quot;build&quot;</span><span style=\"font-family: 楷体;font-size: 14px\">: </span><span style=\";font-family:楷体;color:rgb(163,21,21);font-size:14px\">&quot;node build/build.js&quot;</span><span style=\"font-family: 楷体;font-size: 14px\">,</span></p><p style=\"margin-left: 84px;line-height: 19px;background: rgb(255, 255, 255)\"><span style=\"font-family: 楷体;font-size: 14px\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\";font-family:楷体;color:rgb(4,81,165);font-size:14px\">&quot;e2e&quot;</span><span style=\"font-family: 楷体;font-size: 14px\">: </span><span style=\";font-family:楷体;color:rgb(163,21,21);font-size:14px\">&quot;node test/e2e/runner.js&quot;</span><span style=\"font-family: 楷体;font-size: 14px\">,</span></p><p style=\"margin-left: 84px;line-height: 19px;background: rgb(255, 255, 255)\"><span style=\"font-family: 楷体;font-size: 14px\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\";font-family:楷体;color:rgb(4,81,165);font-size:14px\">&quot;test&quot;</span><span style=\"font-family: 楷体;font-size: 14px\">: </span><span style=\";font-family:楷体;color:rgb(163,21,21);font-size:14px\">&quot;npm run e2e&quot;</span><span style=\"font-family: 楷体;font-size: 14px\">,</span></p><p style=\"margin-left: 84px;line-height: 19px;background: rgb(255, 255, 255)\"><span style=\"font-family: 楷体;font-size: 14px\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\";font-family:楷体;color:rgb(4,81,165);font-size:14px\">&quot;lint&quot;</span><span style=\"font-family: 楷体;font-size: 14px\">: </span><span style=\";font-family:楷体;color:rgb(163,21,21);font-size:14px\">&quot;eslint --ext .js,.vue src test/e2e/specs&quot;</span></p><p style=\"margin-left: 84px;line-height: 19px;background: rgb(255, 255, 255)\"><span style=\"font-family: 楷体;font-size: 14px\">&nbsp;&nbsp;},</span></p><p style=\"margin-left: 84px;line-height: 19px;background: rgb(255, 255, 255)\"><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\">dev</span><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\">:</span><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\"><span style=\"font-family:楷体\">为本地开发的启动项；</span></span></p><p style=\"margin-left: 84px;line-height: 19px;background: rgb(255, 255, 255)\"><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\">start：和dev一样；</span></p><p style=\"margin-left: 84px;line-height: 19px;background: rgb(255, 255, 255)\"><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\">build:打包线上部署代码</span></p><p style=\"margin-left: 84px;line-height: 19px;background: rgb(255, 255, 255)\"><span style=\"font-family: 楷体;font-size: 14px\">e2e:这个代表端对端测试，确切的来说就是前端的一个自动化测试；这里使用的是java的nightwatch自动化测试工具，使用测试需要进行java的全局安装</span></p><p><br/></p>','2017-09-03 11:27:12',50,'有需要的小伙伴们快过来了','undefined',1,1),(11,'YmQ2NjhhZGQtYWY4ZS00MmY3LWE2M2QtYzE1NDQ2YjA0MzM2','MTgwNjFlMzQtNThhYi00MGVlLWJhYjctZjQzNDQzZWU0YTYw','YTZkMmYwZjgtZTI0YS00YTA4LWIzOTktNWQ0ZmJiMmJmMDMz','vue的路由和指令','张莎','<p><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">十二、指令</span></span></strong></p><p style=\"margin-left: 52px\"><span style=\"font-family:楷体;font-size:14px\">1、&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">内置指令：</span></span></p><p style=\"margin-left: 80px\"><span style=\"font-family:楷体;font-size:14px\">1)&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">V</span><span style=\";font-family:楷体;font-size:14px\">-bind</span></p><p style=\"margin-left: 80px\"><span style=\"font-family:楷体;font-size:14px\">2)&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">V</span><span style=\";font-family:楷体;font-size:14px\">-model</span></p><p style=\"margin-left: 80px\"><span style=\"font-family:楷体;font-size:14px\">3)&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">V</span><span style=\";font-family:楷体;font-size:14px\">-if/ v-else-if</span><span style=\";font-family:楷体;font-size:14px\">/</span><span style=\";font-family:楷体;font-size:14px\">v-else</span><span style=\";font-family:楷体;font-size:14px\">/v-show</span></p><p style=\"margin-left: 80px\"><span style=\"font-family:楷体;font-size:14px\">4)&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">V-for</span></p><p style=\"margin-left: 80px\"><span style=\"font-family:楷体;font-size:14px\">5)&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">V-on</span></p><p style=\"margin-left: 80px\"><span style=\"font-family:楷体;font-size:14px\">6)&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">V-text</span></p><p style=\"margin-left: 80px\"><span style=\"font-family:楷体;font-size:14px\">7)&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">V-html</span></p><p style=\"margin-left: 80px\"><span style=\"font-family:楷体;font-size:14px\">8)&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">v-pre 指令相对简单，就是</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">跳过编译这个元素和子元素</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">，显示原始的</span> {{}}Mustache 标 签，用来减少编译时间。</span></p><p style=\"margin-left: 80px\"><span style=\"font-family:楷体;font-size:14px\">9)&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">v-cloak 指令相当于在元素上添加了一个 [v-cloak] 的属性，直到关联的实例结束编译。 官方推荐可以和 css 规则 [v-cloak]{ display :none } 一起使用，可以隐藏未编译的 Mustache 标签直到实例准备完毕</span></p><p style=\"margin-left: 80px\"><span style=\"font-family:楷体;font-size:14px\">10)&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">v-once 指令是 Vue.js 2.0 中新增的内置指令</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">，</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">用于标明元素或组件只渲染一次，即使随</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;<span style=\"font-family:楷体\">后发生绑定数据的变化或更新，该元素或组件及包含的子元素都不会再次被编译和渲染。</span></span></p><p style=\"margin-left: 52px\"><span style=\"font-family:楷体;font-size:14px\">2、&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">自定义指令基础：</span></span></p><p style=\"margin-left: 80px\"><span style=\"font-family:楷体;font-size:14px\">1)&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">注册：</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">通过</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;Vue.directive</span><span style=\";font-family:楷体;font-size:14px\">(id, definition) 方法注册一个</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">全局自定义指令</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">，</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">接收参数</span> id 和定义对象。id 是指令的唯一标识，定义对象则是指令的相关属性及钩子函数。</span></p><p style=\"margin-left: 80px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">也可以通过在组件的</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;directives 选项注册一个局部的自定 义指令</span></p><p style=\"margin-left: 80px\"><span style=\"font-family:楷体;font-size:14px\">2)&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">指令的定义对象：</span></span></p><p style=\"margin-left: 80px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">主要包含钩子函数：</span></span></p><p style=\"margin-left: 136px\"><span style=\";font-family:楷体;font-size:14px\">bind: </span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">只被调用一次，在指令第一次绑定到元素上时调用。用这个钩子函数可以定义一个在绑定时执行一次的初始化动作。</span> </span></p><p style=\"margin-left: 143px\"><span style=\";font-family:楷体;font-size:14px\">inserted: </span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">被绑定元素插入父节点时调用</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">（父节点存在即可调用，不必存在于</span> document 中）。</span></p><p style=\"margin-left: 157px\"><span style=\";font-family:楷体;font-size:14px\">update ：</span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">所在组件的</span> VNode 更新时调用，但是可能发生在其孩子的</span><strong><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\">&nbsp;VNode 更新之前</span></strong><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">。指令的值可能发生了改变也可能没有。但是你可以通过比较更新前后的值来忽略不必要的模板更新</span></span><span style=\";font-family:Calibri;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;</span></p><p style=\"margin-left: 164px\"><span style=\";font-family:楷体;font-size:14px\">componentUpdated: </span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">所在组件的</span> VNode</span><span style=\";font-family:Calibri;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\"><span style=\"font-family:楷体\">及其孩子的</span> VNode</span></strong><span style=\";font-family:Calibri;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">全部更新时调用</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">。</span></span></p><p style=\"margin-left: 94px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\">unbind ：</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">指令从元素上解绑时调用，只调用一次。</span></span></p><p style=\"margin-left: 80px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">注：</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">如果我们只需要使用</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;update 函数时，可以直接传入一个函数代替定义对象</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">；</span></span></p><p style=\"margin-left: 80px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">指令绑定的值：</span></span></p><p style=\"margin-left: 129px\"><span style=\"font-family:楷体;font-size:14px\">a)&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">data 中的属性</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">，使用</span></span><span style=\";font-family:楷体;font-size:14px\">&lt;div v-my-directive=&quot;constant string&quot;/&gt;&lt;/div&gt;</span></p><p style=\"margin-left: 129px\"><span style=\"font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">b)&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">绑定字符串需要加单引号</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">，</span></span><span style=\";font-family:楷体;font-size:14px\">&lt;div v-my-direcitve=&quot;&#39;constant string&#39;&quot;&gt;&lt;/div&gt;</span></p><p style=\"margin-left: 129px\"><span style=\"font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">c)&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">利用字面</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">1</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">修饰符后无需使用单引号</span></span></p><p style=\"margin-left: 129px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\">&lt;div v-my-directive.literal=&quot;constant string&quot;&gt;&lt;/div&gt;</span></p><p style=\"margin-left: 129px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\">&nbsp;</span></p><p style=\"margin-left: 129px\"><span style=\"font-family:楷体;font-size:14px\">d)&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">受对象字面量或任意合法的</span></span><span style=\";font-family:楷体;font-size:14px\">&nbsp;JavaScript 表达式</span><span style=\";font-family:楷体;font-size:14px\">:</span></p><p style=\"margin-left: 80px\"><span style=\";font-family:楷体;font-size:14px\">&lt;div v-my-directive=&quot;{ title : &#39;Vue.js&#39;, author : &#39;You&#39;}&quot; &gt;&lt;/div&gt; </span></p><p style=\"margin-left: 80px\"><span style=\";font-family:楷体;font-size:14px\">&lt;div v-my-directive=&quot;isExist ? &#39;yes&#39; : &#39;no&#39;&quot; &gt;&lt;/div&gt;</span></p><p style=\"margin-left: 80px\"><span style=\"font-family:楷体;font-size:14px\">3)&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">指令的实例属性：</span> &nbsp;&nbsp;</span> &nbsp;</p><p style=\"margin-left: 129px\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">a)&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\">el: 指令所绑定的元素，可以用来直接操作 DOM 。</span></strong></p><p style=\"margin-left: 129px\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px\">b)&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\">binding: 一个对象，包含以下属性：</span></strong></p><p style=\"margin-left: 122px;text-indent: 0\"><strong><span style=\"font-family: 楷体;font-size: 14px\">name</span></strong><span style=\";font-family:楷体;font-size:14px\">: </span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">指令名</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">，不包括</span></span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">v-</span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">前缀。</span></span></p><p style=\"margin-left: 122px;text-indent: 0\"><strong><span style=\"font-family: 楷体;font-size: 14px\">value</span></strong><span style=\";font-family:楷体;font-size:14px\">: </span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">指令的绑定值</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">，</span> <span style=\"font-family:楷体\">例如：</span></span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">v-my-directive=&quot;1 + 1&quot;, value 的值是</span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">2。</span></p><p style=\"margin-left: 122px;text-indent: 0\"><strong><span style=\"font-family: 楷体;font-size: 14px\">oldValue</span></strong><span style=\";font-family:楷体;font-size:14px\">: </span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">指令绑定的前一个值，仅在</span></span><span style=\";font-family:Calibri;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">update</span><span style=\";font-family:Calibri;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">和</span></span><span style=\";font-family:Calibri;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">componentUpdated</span><span style=\";font-family:Calibri;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">钩子中可用。无论值是否改变都可用</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">。</span></span></p><p style=\"margin-left: 122px;text-indent: 0\"><strong><span style=\"font-family: 楷体;font-size: 14px\">expression</span></strong><span style=\";font-family:楷体;font-size:14px\">: </span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">绑定值的字符串形式。</span> </span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">例如</span></span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">v-my-directive=&quot;1 + 1&quot;</span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">，</span> expression 的值是</span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">&quot;1 + 1&quot;。</span></p><p style=\"margin-left: 122px;text-indent: 0\"><strong><span style=\"font-family: 楷体;font-size: 14px\">arg</span></strong><span style=\";font-family:楷体;font-size:14px\">: </span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">传给指令的参数</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">。例如</span></span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">v-my-directive:foo， arg 的值是</span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">&quot;foo&quot;。</span></p><p style=\"margin-left: 122px;text-indent: 0\"><strong><span style=\"font-family: 楷体;font-size: 14px\">modifiers</span></strong><span style=\";font-family:楷体;font-size:14px\">: </span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">一个包含修饰符的对象</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">。</span> <span style=\"font-family:楷体\">例如：</span></span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">v-my-directive.foo.bar, 修饰符对象 modifiers 的值是</span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">{ foo: true, bar: true }。</span></p><p style=\"margin-left: 129px\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px\">c)&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\">vnode: </span></strong><strong><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\">Vue 编译生成的虚拟节点</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">，查阅</span></span></strong><strong><span style=\"font-family: Calibri;font-size: 14px\">&nbsp;</span></strong><a href=\"#VNode接口\"><strong><span style=\"font-family: 楷体;font-size: 14px\">VNode API</span></strong></a><strong><span style=\"font-family: Calibri;font-size: 14px\">&nbsp;</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">了解更多详情。</span></span></strong></p><p style=\"margin-left: 129px\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px\">d)&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\">oldVnode: </span></strong><strong><span style=\"font-family: 楷体;color: rgb(0, 0, 255);font-size: 14px;background: rgb(0, 255, 255)\"><span style=\"font-family:楷体\">上一个虚拟节点，仅在</span></span></strong><strong><span style=\"font-family: Calibri;color: rgb(0, 0, 255);font-size: 14px;background: rgb(0, 255, 255)\">&nbsp;</span></strong><strong><span style=\"font-family: 楷体;color: rgb(0, 0, 255);font-size: 14px;background: rgb(0, 255, 255)\">update</span></strong><strong><span style=\"font-family: Calibri;color: rgb(0, 0, 255);font-size: 14px;background: rgb(0, 255, 255)\">&nbsp;</span></strong><strong><span style=\"font-family: 楷体;color: rgb(0, 0, 255);font-size: 14px;background: rgb(0, 255, 255)\"><span style=\"font-family:楷体\">和</span></span></strong><strong><span style=\"font-family: Calibri;color: rgb(0, 0, 255);font-size: 14px;background: rgb(0, 255, 255)\">&nbsp;</span></strong><strong><span style=\"font-family: 楷体;color: rgb(0, 0, 255);font-size: 14px;background: rgb(0, 255, 255)\">componentUpdated</span></strong><strong><span style=\"font-family: Calibri;color: rgb(0, 0, 255);font-size: 14px;background: rgb(0, 255, 255)\">&nbsp;</span></strong><strong><span style=\"font-family: 楷体;color: rgb(0, 0, 255);font-size: 14px;background: rgb(0, 255, 255)\"><span style=\"font-family:楷体\">钩子中可用。</span></span></strong></p><p><span style=\";font-family:楷体;font-size:14px\">&nbsp;</span></p><p style=\"margin-left: 80px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\">&nbsp;</span></p><p style=\"margin-left: 52px\"><span style=\"font-family:楷体;font-size:14px\">3、&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">指令与组件的区别：</span></span></p><p style=\"margin-left: 52px;text-indent: 0\"><span style=\";font-family:楷体;color:rgb(38,38,38);font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255);background:rgb(255,255,255)\"><span style=\"font-family:楷体\">组件一般是指一个独立实体，组件之间的关系通常都是树状。</span></span></p><p style=\"margin-left: 52px;text-indent: 0\"><span style=\";font-family:楷体;color:rgb(0,0,255);font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255);background:rgb(255,255,255)\"><span style=\"font-family:楷体\">指令是一种</span>Decorator模式，用以改写某个组件的默认行为，或者增强使其获得额外功能，一般来说可以在同一个组件上叠加若干个指令，使其获得多种功能。</span></p><p style=\"margin-top:0;margin-bottom:0;margin-left:24px;text-indent:14px;line-height:26px\"><span style=\";font-family:楷体;font-size:14px\">&nbsp;</span></p><p><span style=\";font-family:楷体;font-size:14px\">&nbsp;</span></p><p><span style=\";font-family:楷体;font-size:14px\">&nbsp;</span></p><p><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">十二、</span>vue</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\">-route</span></strong></p><p style=\"margin-left: 42px\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px\">(一)&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">基本用法：</span></span></strong></p><p style=\"margin-left: 70px\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px\">1、&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\">router-link：</span></strong></p><p style=\"margin-left: 84px\"><span style=\"font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">a)&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&lt;router-link&gt;</span><span style=\";font-family:Calibri;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">组件支持用户在具有路由功能的应用中（点击）导航</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">。</span> <span style=\"font-family:楷体\">通</span></span><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">过</span></span></strong><strong><span style=\"font-family: Calibri;font-size: 14px\">&nbsp;</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\">to</span></strong><strong><span style=\"font-family: Calibri;font-size: 14px;background: rgb(0, 255, 255)\">&nbsp;</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\"><span style=\"font-family:楷体\">属性指定目标地址，默认渲染成带有正确链接的</span></span></strong><strong><span style=\"font-family: Calibri;font-size: 14px;background: rgb(0, 255, 255)\">&nbsp;</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\">&lt;a&gt;</span></strong><strong><span style=\"font-family: Calibri;font-size: 14px;background: rgb(0, 255, 255)\">&nbsp;</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\"><span style=\"font-family:楷体\">标签，可以通过配置</span></span></strong><strong><span style=\"font-family: Calibri;font-size: 14px;background: rgb(0, 255, 255)\">&nbsp;</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\">tag</span></strong><strong><span style=\"font-family: Calibri;font-size: 14px;background: rgb(0, 255, 255)\">&nbsp;</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\"><span style=\"font-family:楷体\">属性生成别的标签</span></span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">，</span></span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\">&lt;router-link&gt;</span></strong><strong><span style=\"font-family: Calibri;font-size: 14px\">&nbsp;</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">比起写死的</span></span></strong><strong><span style=\"font-family: Calibri;font-size: 14px\">&nbsp;</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\">&lt;a href=&quot;...&quot;&gt;</span></strong><strong><span style=\"font-family: Calibri;font-size: 14px\">&nbsp;</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">会好一些</span></span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">；</span></span></strong></p><p style=\"margin-left: 84px\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px\">b)&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\">props:路由参数：</span></strong></p><p style=\"margin-left: 84px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\">to</span><span style=\";font-family:楷体;font-size:14px\">:</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">格式为</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">字符串或者是对象</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">；</span></span></p><p style=\"margin-left: 84px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">写法：</span></span></p><p style=\"margin-left: 84px;text-indent: 0\"><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&lt;</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">router-link</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&nbsp;</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">to</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">=</span><span style=\";font-family:Courier;color:rgb(113,140,0);font-size:14px;background:rgb(248,248,248)\">&quot;home&quot;</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&gt;</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">Home</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&lt;/</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">router-link</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&gt;</span></p><p style=\"margin-left: 84px;text-indent: 0\"><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&lt;</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">router-link</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&nbsp;</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">:to</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">=</span><span style=\";font-family:Courier;color:rgb(113,140,0);font-size:14px;background:rgb(248,248,248)\">&quot;&#39;home&#39;&quot;</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&gt;</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">Home</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&lt;/</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">router-link</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&gt;</span></p><p style=\"margin-left: 52px\"><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&lt;</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">router-link</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&nbsp;</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">:to</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">=</span><span style=\";font-family:Courier;color:rgb(113,140,0);font-size:14px;background:rgb(248,248,248)\">&quot;{ path: &#39;home&#39; }&quot;</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&gt;</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">Home</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&lt;/</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">router-link</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&gt;</span></p><p style=\"margin-left: 52px\"><span style=\";font-family:楷体;font-size:14px\">&nbsp;</span></p><p style=\"margin-left: 112px\"><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&lt;</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">router-link</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&nbsp;</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">:to</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">=</span><span style=\";font-family:Courier;color:rgb(113,140,0);font-size:14px;background:rgb(248,248,248)\">&quot;{ name: &#39;user&#39;, params: { userId: 123 }}&quot;</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&gt;</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">User</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&lt;/</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">router-link</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&gt;</span></p><p style=\"margin-left: 112px\"><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&nbsp;</span></p><p style=\"margin-left: 112px\"><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&lt;</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">router-link</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&nbsp;</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">:to</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">=</span><span style=\";font-family:Courier;color:rgb(113,140,0);font-size:14px;background:rgb(248,248,248)\">&quot;{ path: &#39;register&#39;, query: { plan: &#39;private&#39; }}&quot;</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&gt;</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">Register</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&lt;/</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">router-link</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&gt;</span></p><p style=\"margin-left: 84px\"><span style=\";font-family:楷体;font-size:14px\">replace: 设置</span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">replace</span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">属性的话，当点击时，会调用</span></span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">router.replace()</span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">而不是</span></span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">router.push()，于是导航后</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">不会留下</span> history 记录</span></p><p style=\"margin-left: 84px\"><span style=\";font-family:楷体;font-size:14px\">&nbsp;</span></p><p style=\"margin-left: 84px\"><span style=\";font-family:楷体;font-size:14px\">append:</span><span style=\";font-family:Arial;color:rgb(51,51,51);font-size:14px;background:rgb(255,255,255)\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">在当前（相对）</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">路径前添加基路径。</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">例如，我们从</span></span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">/a</span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">导航到一个相对路径</span></span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">b，如果没有配置</span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">append，则路径为</span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">/b，如果配了，则为</span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">/a/b</span></p><p style=\"margin-left: 84px\"><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">注</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">：另一个路径不允许加</span>/；</span></p><p style=\"margin-left: 84px\"><span style=\";font-family:楷体;font-size:14px\">&nbsp;</span></p><p style=\"margin-left: 84px\"><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">tag:</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">将</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">r</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">outer-link转换为另外一种标签；</span></p><p style=\"margin-left: 84px\"><span style=\";font-family:楷体;font-size:14px\">&nbsp;</span></p><p style=\"margin-left: 84px\"><span style=\";font-family:楷体;font-size:14px\">active-class：</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">设置</span> <span style=\"font-family:楷体\">链接激活时使用的</span> CSS 类名。默认值可以</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">通过路由的构造选项</span></span><span style=\";font-family:Calibri;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">linkActiveClass</span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">来全局配置。</span></span><span style=\";font-family:楷体;font-size:14px\">&nbsp;&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">.router-link-active直接写样式 </span></p><p style=\"margin-left: 84px;text-indent: 0\"><strong><span style=\"font-family: 楷体;font-size: 14px\">&nbsp;</span></strong></p><p style=\"margin-left: 70px\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px\">2、&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\">router-view</span></strong></p><p style=\"margin-left: 84px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">渲染对应的路由配置中</span></span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">components</span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">下的相应组件</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">；可以和</span></span><span style=\";font-family:楷体;font-size:14px\">&lt;transition&gt;</span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">、</span></span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">&lt;keep-alive&gt;等</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">配合使用，</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">两个结合一起用，要确保在内层使用</span></span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">&lt;keep-alive&gt;：</span></p><p style=\"margin-left: 84px\"><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&lt;transition&gt;</span></p><p style=\"margin-left: 84px\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">&nbsp;&nbsp;</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&lt;keep-alive&gt;</span></p><p style=\"margin-left: 84px\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&lt;router-view&gt;&lt;/router-view&gt;</span></p><p style=\"margin-left: 84px\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">&nbsp;&nbsp;</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&lt;/keep-alive&gt;</span></p><p style=\"margin-left: 84px;text-indent: 0\"><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&lt;/transition&gt;</span></p><p style=\"margin-left: 70px\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px\">3、&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">路由信息对象：</span></span></strong></p><p style=\"margin-left: 84px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">路</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">由信息对象表示当前激活的路由的状态信息，是不可变得，每次成功的导航都会产生一个新的对象</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">；</span></span></p><p style=\"margin-left: 84px;text-indent: 0\"><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">出现的地方：</span></span></strong></p><p style=\"margin-left: 94px\"><span style=\"font-family:Wingdings;font-size:14px\">l&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">组件内部的钩子函数中；</span></span></p><p style=\"margin-left: 94px\"><span style=\"font-family:Wingdings;font-size:14px\">l&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">导航的钩子函数中</span></span></p><p style=\"margin-left: 94px\"><span style=\"font-family:Wingdings;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">l&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">watch监听的$route对象中的（to</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">,from</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">）参数：</span></span></p><p style=\"margin-left: 94px\"><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">例：</span></span></p><p style=\"margin-left: 98px\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255);background:rgb(248,248,248)\">watch: {</span></p><p style=\"margin-left: 98px\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255);background:rgb(248,248,248)\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\";font-family:Courier;color:rgb(113,140,0);font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255);background:rgb(248,248,248)\">&#39;$route&#39;</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255);background:rgb(248,248,248)\">&nbsp;(to, </span><span style=\";font-family:Courier;color:rgb(137,89,168);font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255);background:rgb(248,248,248)\">from</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255);background:rgb(248,248,248)\">) {</span></p><p style=\"margin-left: 98px\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255);background:rgb(248,248,248)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} }</span></p><p style=\"margin-left: 94px\"><span style=\"font-family:Wingdings;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">l&nbsp;</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">scrollBehavior</span><span style=\";font-family:Arial;color:rgb(51,51,51);font-size:14px;background:rgb(255,255,255)\">&nbsp;<span style=\"font-family:等线\">方法的参数</span></span></p><p style=\"margin-left: 56px;text-indent: 28px\"><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">路由信息对象的属性：</span></span></strong></p><p style=\"margin-left: 52px;text-indent: 4px\"><strong><span style=\"font-family: 楷体;font-size: 14px\">$route.path：</span></strong><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">字符串，对应当前路由的路径，</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">总是</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">解析为绝对路径</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">，如</span></span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">&quot;/foo/bar&quot;。</span></p><p><span style=\";font-family:楷体;font-size:14px\">&nbsp;</span></p><p style=\"margin-left: 52px\"><strong><span style=\"font-family: 楷体;font-size: 14px\">$route.params：</span></strong><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">包含了</span> <span style=\"font-family:楷体\">动态片段</span> <span style=\"font-family:楷体\">和</span> <span style=\"font-family:楷体\">全匹配片段</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">，</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">如果没有路由参数，就是一个空对象</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">。</span></span></p><p style=\"margin-left: 52px;text-indent: 4px\"><strong><span style=\"font-family: 楷体;font-size: 14px\">$route.query</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">：</span></span></strong><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">一个</span> key/value 对象</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">，表示</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;URL 查询参数</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">。例如，对于路径</span></span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">/foo?user=1，则有</span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">$route.query.user == 1，</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">如果没有查询参数，则是个空对象。</span></span></p><p style=\"margin-left: 52px\"><strong><span style=\"font-family: 楷体;font-size: 14px\">$route.matched：</span></strong><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">一个数组，包含当前路由的所有嵌套路径片段的</span></span><span style=\";font-family:Calibri;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\"><span style=\"font-family:楷体\">路由记录</span></span></strong><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">。路由记录就是</span></span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">routes</span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">配置数组中的对象副本（还有在</span></span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">children</span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">数组）</span></span></p><p style=\"margin-left: 24px;text-indent: 28px\"><strong><span style=\"font-family: 楷体;font-size: 14px\">$route.name：</span></strong><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">当前路由的名称</span></span></p><p style=\"margin-left: 24px;text-indent: 28px\"><span style=\";font-family:楷体;font-size:14px\">&nbsp;</span></p><p style=\"margin-left: 70px\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px\">4、&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\">router构造配置</span></strong></p><p style=\"margin-left: 70px\"><strong><span style=\"font-family: 楷体;font-size: 14px\">mode:</span></strong><span style=\";font-family:Arial;color:rgb(51,51,51);font-size:14px;background:rgb(255,255,255)\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">配置路由模式</span>:hash | history | abstract</span></p><p style=\"margin-left: 70px\"><strong><span style=\"font-family: 楷体;font-size: 14px\">base：</span></strong><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">应用的基路径</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">。例如，</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">如果整个单页应用服务在</span></span><span style=\";font-family:Calibri;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">/app/</span><span style=\";font-family:Calibri;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">下，然后</span></span><span style=\";font-family:Calibri;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">base</span><span style=\";font-family:Calibri;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">就应该设为</span></span><span style=\";font-family:Calibri;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&quot;/app/&quot;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">。</span></span></p><p style=\"margin-left: 66px;text-indent: 4px\"><strong><span style=\"font-family: 楷体;font-size: 14px\">link</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\">ActiveClass: </span></strong><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">全局配置</span></span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">&lt;router-link&gt;</span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">的默认『激活</span> class 类名</span></p><p style=\"margin-left: 52px\"><strong><span style=\"font-family: 楷体;font-size: 14px\">&nbsp;</span></strong></p><p style=\"margin-left: 70px\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px\">5、&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\">router实例：</span></strong></p><p style=\"margin-left: 70px;text-indent: 0\"><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">属性：</span></span></strong></p><p style=\"margin-left: 70px;text-indent: 0\"><strong><span style=\"font-family: 楷体;font-size: 14px\">router</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\">.app:</span></strong><span style=\";font-family:Arial;color:rgb(51,51,51);font-size:14px;background:rgb(255,255,255)\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">配置了</span></span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">router</span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">的</span> Vue 根实例。</span></p><p style=\"margin-left: 70px;text-indent: 0\"><strong><span style=\"font-family: 楷体;font-size: 14px\">router.mode:</span></strong><span style=\";font-family:Arial;color:rgb(51,51,51);font-size:14px;background:rgb(255,255,255)\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">路由使用的</span></span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><a href=\"#mode\"><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">模式</span></span></a><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">。</span></span></p><p style=\"margin-left: 70px;text-indent: 0\"><strong><span style=\"font-family: 楷体;font-size: 14px\">router</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\">.currentRoute:</span></strong><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">当前路由信息对象；</span></span></p><p style=\"margin-left: 52px\"><strong><span style=\"font-family: 楷体;font-size: 14px\">&nbsp;</span></strong></p><p style=\"margin-left: 52px\"><strong> </strong><strong><span style=\"font-family: 楷体;font-size: 14px\">&nbsp;&nbsp;</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">方法：</span></span></strong></p><p style=\"margin-left: 70px\"><strong><span style=\"font-family: 楷体;font-size: 14px\">router.push(location) :</span></strong><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">进行路由的跳转，</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">并</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">且保存到浏览器的</span>history中</span></p><p style=\"margin-left: 70px\"><strong><span style=\"font-family: 楷体;font-size: 14px\">router.replace(location)</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">：</span></span></strong><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">进行路由的替换</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">，</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">不会将上次的路由保存到</span>history中</span></p><p style=\"margin-left: 70px\"><strong><span style=\"font-family: 楷体;font-size: 14px\">router.go(n)</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">：</span></span></strong><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">执行浏览器的前进动作</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">,n</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">代表前进的步数，负数代表后退</span></span></p><p style=\"margin-left: 70px\"><strong><span style=\"font-family: 楷体;font-size: 14px\">router.back()</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">：</span></span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\">&nbsp;</span></strong><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">执行浏览器的后退动作</span></span></p><p style=\"margin-left: 70px\"><strong><span style=\"font-family: 楷体;font-size: 14px\">router.forward()</span></strong></p><p style=\"margin-left: 52px\"><strong> </strong></p><p style=\"margin-left: 70px\"><strong><span style=\"font-family: 楷体;font-size: 14px\">router.addRoutes(routes):</span></strong><span style=\";font-family:Arial;color:rgb(51,51,51);font-size:14px;background:rgb(255,255,255)\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">动态添加更多的路由规则。</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">参数必须是一个符合</span></span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">routes</span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">选项要求的数组</span></span><span style=\";font-family:楷体;font-size:14px\">(小心有坑)</span></p><p style=\"margin-left: 70px;text-indent: 0\"><strong><span style=\"font-family: 楷体;font-size: 14px\">&nbsp;</span></strong></p><p style=\"margin-left: 70px\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px\">6、&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">动态路由匹配：</span></span></strong></p><p style=\"margin-left: 70px;text-indent: 0\"><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">书写方式：</span></span></strong></p><p style=\"margin-left: 70px;text-indent: 0\"><strong><span style=\"font-family: 楷体;font-size: 14px\">&nbsp;</span></strong></p><p style=\"margin-left: 70px;text-indent: 0\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">{ path: </span><span style=\";font-family:Courier;color:rgb(113,140,0);font-size:14px;background:rgb(248,248,248)\">&#39;/user/:id&#39;</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">, component: User }</span></p><p style=\"margin-left: 70px;text-indent: 0\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">{ path: </span><span style=\";font-family:Courier;color:rgb(113,140,0);font-size:14px;background:rgb(248,248,248)\">&#39;</span><span style=\";font-family:Courier;color:rgb(113,140,0);font-size:14px\">/user/:username/post/:post_id</span><span style=\";font-family:Courier;color:rgb(113,140,0);font-size:14px;background:rgb(248,248,248)\">&#39;</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">, component: User }</span></p><p style=\"margin-left: 70px;text-indent: 0\"><strong><span style=\"font-family: 楷体;font-size: 14px\">&nbsp;</span></strong></p><p style=\"margin-left: 70px;text-indent: 0\"><strong><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\"><span style=\"font-family:楷体\">上述的动态值通过</span></span></strong><span style=\";font-family:Arial;color:rgb(51,51,51);font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255);background:rgb(255,255,255)\">&nbsp;</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255);background:rgb(248,248,248)\">$route.params</span><span style=\";font-family:宋体;color:rgb(51,51,51);font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255);background:rgb(248,248,248)\"><span style=\"font-family:宋体\">去接受</span></span></p><p style=\"margin-left: 70px;text-indent: 0\"><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">路由参数的变化：</span></span></strong></p><p style=\"margin-left: 70px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">使用路由参数时</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">，</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">例如从</span></span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">/user/foo</span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">导航到</span></span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">user/bar，</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">原来的组件实例会被复用</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">。</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">因为两个路由都渲染同个组件，比起销毁再创建，复用则显得更加高效。</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">不过，这也意味着</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">组件的生命周期钩子不会再被调用；</span></span></p><p style=\"margin-left: 70px;text-indent: 0\"><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">解决办法：</span></span></strong></p><p style=\"margin-left: 70px;text-indent: 0\"><span style=\";font-family:Calibri;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">watch（监测变化）</span><span style=\";font-family:Calibri;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">$route</span><span style=\";font-family:Calibri;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">对象：</span></span></p><p><span style=\";font-family:楷体;font-size:14px\">&nbsp;</span></p><p style=\"margin-left: 70px\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px\">7、&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">嵌套路由：</span></span></strong></p><p style=\"margin-left: 70px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">在</span></span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">VueRouter</span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">的</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">参数中使用</span></span><span style=\";font-family:Calibri;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">children</span><span style=\";font-family:Calibri;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">配置</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">，</span></span><span style=\"text-decoration:underline;\"><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\"><span style=\"font-family:楷体\">属性值为路由对象数组；</span></span></span></p><p style=\"margin-left: 70px;text-indent: 0\"><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">注意：</span></span></strong><strong><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\"><span style=\"font-family:楷体\">在子路由的</span>path属性中设置路由地址时，不可以加“/”，否则将会以根路由进行添加</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">；</span></span></strong></p><p style=\"margin-left: 70px;text-indent: 0\"><strong><span style=\"font-family: 楷体;font-size: 14px\">&nbsp;</span></strong></p><p style=\"margin-left: 70px\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px\">8、&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">多视图多组件渲染：</span></span></strong></p><p style=\"margin-left: 70px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">多视图对应多组件，使用的路由对象属性为：</span>components；</span></p><p style=\"margin-left:70px\"><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">例：</span></span></p><p style=\"margin-left:70px\"><span style=\";font-family:楷体;font-size:14px\">html：</span></p><p style=\"margin-left:70px\"><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&lt;router-view class=</span><span style=\";font-family:Courier;color:rgb(113,140,0);font-size:14px;background:rgb(248,248,248)\">&quot;view one&quot;</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&gt;&lt;/router-view&gt;</span></p><p style=\"margin-left: 70px\"><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&lt;router-view class=</span><span style=\";font-family:Courier;color:rgb(113,140,0);font-size:14px;background:rgb(248,248,248)\">&quot;view two&quot;</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&nbsp;name=</span><span style=\";font-family:Courier;color:rgb(113,140,0);font-size:14px;background:rgb(248,248,248)\">&quot;a&quot;</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&gt;&lt;/router-view&gt;</span></p><p style=\"margin-left: 70px;text-indent: 0\"><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&lt;router-view class=</span><span style=\";font-family:Courier;color:rgb(113,140,0);font-size:14px;background:rgb(248,248,248)\">&quot;view three&quot;</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&nbsp;name=</span><span style=\";font-family:Courier;color:rgb(113,140,0);font-size:14px;background:rgb(248,248,248)\">&quot;b&quot;</span><span style=\";font-family:Courier;color:rgb(200,40,41);font-size:14px;background:rgb(248,248,248)\">&gt;&lt;/router-view&gt;</span></p><p style=\"margin-left: 70px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\">js：</span></p><p style=\"margin-left: 84px\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">{</span></p><p style=\"margin-left: 84px\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path: </span><span style=\";font-family:Courier;color:rgb(113,140,0);font-size:14px;background:rgb(248,248,248)\">&#39;/&#39;</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">,</span></p><p style=\"margin-left: 84px\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;components: {</span></p><p style=\"margin-left: 84px\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\";font-family:Courier;color:rgb(137,89,168);font-size:14px;background:rgb(248,248,248)\">default</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">: Foo,</span></p><p style=\"margin-left: 84px\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a: Bar,</span></p><p style=\"margin-left: 84px\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b: Baz</span></p><p style=\"margin-left: 84px\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\"margin-left: 70px;text-indent: 24px\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">}</span></p><p style=\"margin-left: 70px\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px\">9、&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">重定向：</span></span></strong></p><p style=\"margin-left: 70px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">属性为</span>redirect，属性值可以为{name：“foo”}或“foo”或者为一个方法的返回值</span></p><p style=\"margin-left: 70px;text-indent: 0\"><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">例：</span></span></strong></p><p style=\"margin-left: 70px;text-indent: 0\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">{ path: </span><span style=\";font-family:Courier;color:rgb(113,140,0);font-size:14px;background:rgb(248,248,248)\">&#39;/a&#39;</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">, redirect: { name: </span><span style=\";font-family:Courier;color:rgb(113,140,0);font-size:14px;background:rgb(248,248,248)\">&#39;foo&#39;</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">&nbsp;}}</span></p><p style=\"margin-left: 70px\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px\">10、&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">别名：</span></span></strong></p><p style=\"margin-left: 70px;text-indent: 0\"><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">例：</span></span></strong><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">{ path: </span><span style=\";font-family:Courier;color:rgb(113,140,0);font-size:14px;background:rgb(248,248,248)\">&#39;/a&#39;</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">, component: A, </span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255);background:rgb(248,248,248)\">alias</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">: </span><span style=\";font-family:Courier;color:rgb(113,140,0);font-size:14px;background:rgb(248,248,248)\">&#39;/b&#39;</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">&nbsp;}</span></p><p style=\"margin-left: 70px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">当用户访问</span>/b时，路由显示的是/b</span><span style=\";font-family:楷体;font-size:14px\">,</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">其实规则为</span>/a</span></p><p style=\"margin-left: 70px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\">&nbsp;</span></p><p style=\"margin-left: 70px\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px\">11、&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">路由的钩子函数：</span></span></strong></p><p style=\"margin-left: 80px\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px\">1)&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">全局钩子：（一般不使用）</span></span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\">&nbsp;beforeEach afterEnter</span></strong></p><p style=\"margin-left: 80px;text-indent: 0\"><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">使用</span>router的实例对象进行注册；</span></strong><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">当一个导航触发时，</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">全局的</span></span><span style=\";font-family:Calibri;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255);background:rgb(248,248,248)\">beforeEach</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">钩子按照创建顺序调用。</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">钩子是异步解析执行，此时导航在所有钩子</span> resolve 完之前一直处于</span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">等待中</span></span></strong></p><p style=\"margin-left: 80px;text-indent: 0\"><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">三个参数：</span></span></strong></p><p style=\"margin-left: 80px;text-indent: 0\"><strong> </strong><strong> </strong><strong><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\">next()：</span></strong><span style=\";font-family:Calibri;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">进行管道中的下一个钩子</span></span></p><p style=\"margin-left: 80px;text-indent: 0\"><strong> </strong><strong> </strong><strong><span style=\"font-family: 楷体;font-size: 14px\">next(</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\">false</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\">)</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\">:</span></strong><span style=\";font-family:Arial;color:rgb(51,51,51);font-size:14px;background:rgb(255,255,255)\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">中断当前的导航。</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">重置到</span></span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">from</span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">路由对应的地址</span></span></p><p style=\"margin-left: 108px;text-indent: 4px\"><strong><span style=\"font-family: 楷体;font-size: 14px\">next(&#39;/&#39;)</span></strong><strong><span style=\"font-family: Calibri;font-size: 14px\">&nbsp;</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">或</span>next({ path: &#39;/&#39; })：</span></strong><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">当前导航被中断，重定向到另一个新的导航</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">：</span></span></p><p style=\"margin-left: 108px;text-indent: 4px\"><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">例：</span></span></strong></p><p style=\"margin-left: 112px\"><span style=\";font-family:Courier;color:rgb(137,89,168);font-size:14px;background:rgb(248,248,248)\">const</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">&nbsp;router = </span><span style=\";font-family:Courier;color:rgb(137,89,168);font-size:14px;background:rgb(248,248,248)\">new</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">&nbsp;VueRouter({ ... })</span></p><p style=\"margin-left: 112px\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">router.beforeEach((to, </span><span style=\";font-family:Courier;color:rgb(137,89,168);font-size:14px;background:rgb(248,248,248)\">from</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">, next) =&gt; {})</span></p><p style=\"margin-left: 112px\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">&nbsp;</span></p><p style=\"margin-left: 80px\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px\">2)&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">路由的独享钩子：</span></span></strong></p><p style=\"margin-left: 84px;text-indent: 28px\"><strong><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\"><span style=\"font-family:楷体\">在路由的配置项中定义：</span>before</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\">E</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\">nter属性；</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\">&nbsp;afterEnter</span></strong></p><p style=\"margin-left: 112px\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">{</span></p><p style=\"margin-left: 112px\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path: </span><span style=\";font-family:Courier;color:rgb(113,140,0);font-size:14px;background:rgb(248,248,248)\">&#39;/foo&#39;</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">,</span></p><p style=\"margin-left: 112px\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;component: Foo,</span></p><p style=\"margin-left: 112px\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;beforeEnter: (to, </span><span style=\";font-family:Courier;color:rgb(137,89,168);font-size:14px;background:rgb(248,248,248)\">from</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">, next) =&gt; {</span></p><p style=\"margin-left: 112px\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p><p style=\"margin-left: 112px\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\"margin-left: 84px;text-indent: 28px\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">&nbsp;}</span></p><p style=\"margin-left: 112px\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">&nbsp;</span></p><p style=\"margin-left: 80px\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px\">3)&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">组件内的路由钩子：</span></span></strong></p><p style=\"margin-left: 70px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">beforeRouteEnter</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">：路由跳转之前执行，不能获取</span>this，组件实例还没有创建；</span></p><p style=\"margin-left: 70px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">beforeRouteUpdate</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">：路由重新跳转之前，该方法在组件复用时调用，该钩子函数中可以访问组件的实例</span>this</span></p><p style=\"margin-left: 70px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">beforeRouteLeave</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">：离开该组件的对应路由时调用，可以访问实例</span>this，一般在用户未保存信息时，不允许跳转相应的路由，next（false）阻止；</span></p><p style=\"margin-left: 70px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\">&nbsp;</span></p><p style=\"margin-left: 70px;text-indent: 0\"><span style=\"text-decoration:underline;\"><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">关于</span>before</span></span><span style=\"text-decoration:underline;\"><span style=\"font-family: 楷体;font-size: 14px\">R</span></span><span style=\"text-decoration:underline;\"><span style=\"font-family: 楷体;font-size: 14px\">oute</span></span><span style=\"text-decoration:underline;\"><span style=\"font-family: 楷体;font-size: 14px\">E</span></span><span style=\"text-decoration:underline;\"><span style=\"font-family: 楷体;font-size: 14px\">nter钩子不能访问this，可以通过一个回调给next来访问组件实例，</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">例：</span></span></p><p style=\"margin-left: 84px\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">beforeRouteEnter (to, </span><span style=\";font-family:Courier;color:rgb(137,89,168);font-size:14px;background:rgb(248,248,248)\">from</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">, next) {</span></p><p style=\"margin-left: 84px\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">&nbsp;&nbsp;next(vm =&gt; {</span></p><p style=\"margin-left: 84px\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\";font-family:Courier;color:rgb(142,144,140);font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255);background:rgb(248,248,248)\">// <span style=\"font-family:宋体\">通过 </span><span style=\"font-family:Courier\">`vm` </span><span style=\"font-family:宋体\">访问组件实例</span></span></p><p style=\"margin-left: 84px\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">&nbsp;&nbsp;})</span></p><p style=\"margin-left: 80px;text-indent: 0\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">}</span></p><p style=\"margin-left: 70px\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px\">12、&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">数据的获取</span></span></strong></p><p style=\"margin-left: 80px\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px\">1)&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">导航完成之后获取</span></span></strong><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">：</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">先完成导航，然后在接下来的组件生命周期钩子中获取数据。</span></span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">在数据获取期间显示『加载中』之类的指示。</span></span></p><p style=\"margin-left: 80px\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px\">2)&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">导航完成之前获取</span></span></strong><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">：</span></span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">导航完成前，在路由的</span></span><span style=\";font-family:Calibri;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">enter</span><span style=\";font-family:Calibri;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\"><span style=\"font-family:楷体\">钩子中获取数据，在数据获取成功后执行导航。</span></span></p><p style=\"margin-left: 80px;text-indent: 0\"><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">注：</span></span></strong></p><p style=\"margin-left: 80px;text-indent: 0\"><strong> </strong><strong><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\"><span style=\"font-family:楷体\">导航完成之后获取</span></span></strong><strong><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\"><span style=\"font-family:楷体\">需要借助组件的</span>watch属性，</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">在动态路由中组件复用时，进行数据的重新请求；</span></span></strong></p><p style=\"margin-left: 80px;text-indent: 0\"><strong><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\"><span style=\"font-family:楷体\">导航完成之前获取</span></span></strong><strong><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\"><span style=\"font-family:楷体\">借助</span></span></strong><strong><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\">beforeRouteUpdate,</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\">&nbsp;</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">在动态路由中组件复用时，进行数据的重新请求；</span></span></strong></p><p style=\"margin-left: 80px;text-indent: 0\"><strong><span style=\"font-family: 楷体;font-size: 14px\">&nbsp;</span></strong></p><p style=\"margin-left: 80px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\">&nbsp;</span></p><p style=\"margin-left: 70px\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">13、&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\"><span style=\"font-family:楷体\">组件的懒加载</span></span></strong></p><p style=\"margin-left: 98px\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px\">1、&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px\">vue的异步组件和webpack的</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\">require.ensure()</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">相结合，例：</span></span></strong></p><p style=\"margin-left: 98px;text-indent: 0\"><span style=\";font-family:Courier;color:rgb(245,135,31);font-size:14px;background:rgb(248,248,248)\">&nbsp;</span></p><p style=\"margin-left: 56px;line-height: 19px;background: rgb(255, 255, 255)\"><span style=\";font-family:Consolas;color:rgb(0,0,255);font-size:14px\">var</span><span style=\"font-family: Consolas;font-size: 14px\">&nbsp;index = resolve </span><span style=\";font-family:Consolas;color:rgb(0,0,255);font-size:14px\">=&gt;</span><span style=\"font-family: Consolas;font-size: 14px\">&nbsp;require.ensure([</span><span style=\";font-family:Consolas;color:rgb(163,21,21);font-size:14px\">&#39;@/components/index&#39;</span><span style=\"font-family: Consolas;font-size: 14px\">], () </span><span style=\";font-family:Consolas;color:rgb(0,0,255);font-size:14px\">=&gt;</span><span style=\"font-family: Consolas;font-size: 14px\">&nbsp;resolve(require(</span><span style=\";font-family:Consolas;color:rgb(163,21,21);font-size:14px\">&#39;@/components/index&#39;</span><span style=\"font-family: Consolas;font-size: 14px\">)))</span></p><p style=\"margin-left: 98px;text-indent: 0\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">&nbsp;</span></p><p style=\"margin-left: 98px\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">2、&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\"><span style=\"font-family:楷体\">采用</span>amd风格的require</span></strong><strong><span style=\"font-family: 楷体;font-size: 14px\"><span style=\"font-family:楷体\">，例：</span></span></strong></p><p style=\"margin-left: 98px;text-indent: 0\"><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">&nbsp;</span></p><p style=\"margin-left: 98px;line-height: 19px;background: rgb(255, 255, 255)\"><span style=\";font-family:Consolas;color:rgb(0,0,255);font-size:14px\">var</span><span style=\"font-family: Consolas;font-size: 14px\">&nbsp;Hello = resolve </span><span style=\";font-family:Consolas;color:rgb(0,0,255);font-size:14px\">=&gt;</span><span style=\"font-family: Consolas;font-size: 14px\">&nbsp;require([</span><span style=\";font-family:Consolas;color:rgb(163,21,21);font-size:14px\">&#39;@/components/Hello&#39;</span><span style=\"font-family: Consolas;font-size: 14px\">], resolve)</span></p><p style=\"margin-left: 98px\"><span style=\"font-family:楷体;font-weight:bold;font-size:14px;background:rgb(0,255,255);background:rgb(0,255,255)\">3、&nbsp;</span><strong><span style=\"font-family: 楷体;font-size: 14px;background: rgb(0, 255, 255)\"><span style=\"font-family:楷体\">把组件按组分块：</span></span></strong></p><p style=\"margin-left: 98px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">提供</span></span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">require.ensure</span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">第三个参数作为</span> chunk 的名称</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">，</span></span><span style=\";font-family:楷体;font-size:14px\">Webpack 将相同 chunk 下的所有异步模块打包到一个异步块里面 —— 这也意味着我们无须明确列出</span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\">require.ensure</span><span style=\";font-family:Calibri;font-size:14px\">&nbsp;</span><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">的依赖（传空数组就行）</span></span></p><p style=\"margin-left: 98px;text-indent: 0\"><span style=\";font-family:楷体;font-size:14px\"><span style=\"font-family:楷体\">例：</span></span></p><p style=\"margin-left: 98px\"><span style=\";font-family:Courier;color:rgb(137,89,168);font-size:14px;background:rgb(248,248,248)\">const</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">&nbsp;Foo = resolve =&gt; </span><span style=\";font-family:Courier;color:rgb(245,135,31);font-size:14px;background:rgb(248,248,248)\">require</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">.ensure([], () =&gt; resolve (</span><span style=\";font-family:Courier;color:rgb(245,135,31);font-size:14px;background:rgb(248,248,248)\">require</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">(</span><span style=\";font-family:Courier;color:rgb(113,140,0);font-size:14px;background:rgb(248,248,248)\">&#39;./Foo.vue&#39;</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">)), </span><span style=\";font-family:Courier;color:rgb(113,140,0);font-size:14px;background:rgb(248,248,248)\">&#39;group-foo&#39;</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">)</span></p><p style=\"margin-left: 98px\"><span style=\";font-family:Courier;color:rgb(137,89,168);font-size:14px;background:rgb(248,248,248)\">const</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">&nbsp;Bar = resolve =&gt; </span><span style=\";font-family:Courier;color:rgb(245,135,31);font-size:14px;background:rgb(248,248,248)\">require</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">.ensure([], () =&gt; resolve (</span><span style=\";font-family:Courier;color:rgb(245,135,31);font-size:14px;background:rgb(248,248,248)\">require</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">(</span><span style=\";font-family:Courier;color:rgb(113,140,0);font-size:14px;background:rgb(248,248,248)\">&#39;./Bar.vue&#39;</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">)), </span><span style=\";font-family:Courier;color:rgb(113,140,0);font-size:14px;background:rgb(248,248,248)\">&#39;group-foo&#39;</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">)</span></p><p style=\"margin-left: 98px; text-indent: 0px;\"><span style=\";font-family:Courier;color:rgb(137,89,168);font-size:14px;background:rgb(248,248,248)\">const</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">&nbsp;Baz = resolve =&gt; </span><span style=\";font-family:Courier;color:rgb(245,135,31);font-size:14px;background:rgb(248,248,248)\">require</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">.ensure([], () =&gt; resolve (</span><span style=\";font-family:Courier;color:rgb(245,135,31);font-size:14px;background:rgb(248,248,248)\">require</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">(</span><span style=\";font-family:Courier;color:rgb(113,140,0);font-size:14px;background:rgb(248,248,248)\">&#39;./Baz.vue&#39;</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">)), </span><span style=\";font-family:Courier;color:rgb(113,140,0);font-size:14px;background:rgb(248,248,248)\">&#39;group-foo&#39;</span><span style=\";font-family:Courier;color:rgb(51,51,51);font-size:14px;background:rgb(248,248,248)\">)</span></p>','2017-09-04 11:59:39',0,'路由级指令','undefined',1,1);

/*Table structure for table `two_class` */

DROP TABLE IF EXISTS `two_class`;

CREATE TABLE `two_class` (
  `id` varchar(200) NOT NULL,
  `parent_id` varchar(200) NOT NULL,
  `enname` varchar(200) DEFAULT NULL,
  `cnname` varchar(200) DEFAULT NULL,
  `article_num` int(11) DEFAULT NULL,
  `time` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `two_class` */

insert  into `two_class`(`id`,`parent_id`,`enname`,`cnname`,`article_num`,`time`) values ('NjRiNDljMTItODkwYy00NTBjLTk2ZmItM2Q3Y2NjYWI1OTMy','MjMzZjNlNzAtZTExOS00MTRjLTk0OWEtOWI4ZDdkZWJkYTkx','weixin','微信小程序',0,'2017-09-28 11:38:31'),('YTZkMmYwZjgtZTI0YS00YTA4LWIzOTktNWQ0ZmJiMmJmMDMz','MTgwNjFlMzQtNThhYi00MGVlLWJhYjctZjQzNDQzZWU0YTYw','vue','vue',0,'2017-09-07 08:52:59'),('YzQ2YjVlZjMtNTA3MS00NzBmLWI4OTQtMjM5ZDNhYmY4ZTY2','MTZmNGFlYWYtMmQyMC00Mzc0LWI2NDYtNDZmYjA5M2Q4Mjlj','sfd','fds',0,'2017-09-05 08:59:03'),('ZDY1NDJmNmItODI1MS00MmE1LTgxM2MtNzNiYjMxNzE5ZjBh','MTgwNjFlMzQtNThhYi00MGVlLWJhYjctZjQzNDQzZWU0YTYw','front','前端',0,'2017-09-08 21:45:15');

/*Table structure for table `user` */

DROP TABLE IF EXISTS `user`;

CREATE TABLE `user` (
  `id` int(100) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(200) DEFAULT NULL,
  `password` varchar(200) DEFAULT NULL,
  `privilege` int(100) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

/*Data for the table `user` */

insert  into `user`(`id`,`name`,`password`,`privilege`) values (1,'root','root123',0),(4,'sec','sec111',1);

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
